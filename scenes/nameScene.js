const { Scenes, Markup } = require('telegraf');
const userManager = require('../userManager');

const nameScene = new Scenes.BaseScene('name_scene');
nameScene.enter((ctx) => {
  ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø—Ä–∏–∫–æ–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –∏–≥—Ä—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ö–æ—Å–º–æ–ñ–∏—Ä–∞—Ñ, –ß–æ–∫–Ω—É—Ç—ã–π–ü–æ–Ω—á–∏–∫ –∏ —Ç.–¥.)');
});

nameScene.on('text', (ctx) => {
  const funnyName = ctx.message.text.trim();
  if (!funnyName || funnyName.length < 3) {
    return ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª–∏–Ω–æ–π –Ω–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤.');
  }
  if (funnyName.length > 20) {
    return ctx.reply('–ò–º—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ –µ–≥–æ –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤.');
  }
  userManager.setUser(ctx.from.id, { funnyName });
  ctx.reply(
    `–ò–º—è –ø—Ä–∏–Ω—è—Ç–æ: ${funnyName}\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é.`,
    Markup.inlineKeyboard([
      [Markup.button.callback('üéÆ –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É', 'create_new_game')],
      [Markup.button.callback('üé≤ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ', 'join_game')]
    ])
  );
  return ctx.scene.leave();
});

module.exports = nameScene; 