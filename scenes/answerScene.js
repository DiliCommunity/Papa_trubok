const { Scenes, Markup } = require('telegraf');
const gameManager = require('../gameManager');
const userManager = require('../userManager');

const answerScene = new Scenes.BaseScene('answer_scene');

// –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
function createStyledMessage(title, content, emoji = 'üìù') {
  return `<b>üî∏üîπüî∏ ${emoji} ${title} ${emoji} üî∏üîπüî∏</b>\n\n${content}`;
}

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç–æ–≤
const MAX_ANSWERS = 10;

answerScene.enter((ctx) => {
  console.log('–í–æ—à–ª–∏ –≤ —Å—Ü–µ–Ω—É –æ—Ç–≤–µ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:', ctx.scene.state); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ gameId –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å—Ü–µ–Ω—ã –∏–ª–∏ –≤ session
  const gameId = ctx.scene.state?.gameId || ctx.session?.gameId;
  
  if (!gameId) {
    console.error('–û—à–∏–±–∫–∞: gameId –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å—Ü–µ–Ω—ã –∏–ª–∏ —Å–µ—Å—Å–∏–∏'); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    ctx.reply(
      createStyledMessage('–û–®–ò–ë–ö–ê', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', '‚ùå'),
      { 
        parse_mode: 'HTML',
        ...Markup.inlineKeyboard([
          [Markup.button.callback('üöÄ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', 'start_game')]
        ])
      }
    );
    return ctx.scene.leave();
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º gameId –≤ —Å–µ—Å—Å–∏–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  if (!ctx.session) ctx.session = {};
  ctx.session.gameId = gameId;
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã
  const games = gameManager.getGames();
  const game = games[gameId];
  
  if (!game) {
    console.error('–û—à–∏–±–∫–∞: –∏–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —Å ID:', gameId); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    ctx.reply(
      createStyledMessage('–û–®–ò–ë–ö–ê', '–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.', '‚ùå'),
      { 
        parse_mode: 'HTML',
        ...Markup.inlineKeyboard([
          [Markup.button.callback('üöÄ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', 'start_game')]
        ])
      }
    );
    return ctx.scene.leave();
  }

  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å
  ctx.reply(
    createStyledMessage('–í–í–ï–î–ò–¢–ï –û–¢–í–ï–¢', 
      `<b>–í–æ–ø—Ä–æ—Å:</b> "${game.currentQuestion}"\n\n` +
      `–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Å–º–µ—à–Ω–æ–π –æ—Ç–≤–µ—Ç:`, '‚úèÔ∏è'),
    { 
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([[Markup.button.callback('–û—Ç–º–µ–Ω–∞', 'cancel_answer')]])
    }
  );
});

answerScene.action('cancel_answer', (ctx) => {
  ctx.reply('–í–≤–æ–¥ –æ—Ç–≤–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω');
  return ctx.scene.leave();
});

answerScene.on('text', (ctx) => {
  const answer = ctx.message.text;
  // –ü–æ–ª—É—á–∞–µ–º gameId –∏–∑ —Å—Ü–µ–Ω—ã –∏–ª–∏ —Å–µ—Å—Å–∏–∏ (–¥–ª—è —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏)
  const gameId = ctx.scene.state?.gameId || ctx.session?.gameId;
  
  if (!gameId) {
    console.error('–û—à–∏–±–∫–∞: gameId –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞'); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    ctx.reply(
      createStyledMessage('–û–®–ò–ë–ö–ê', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–µ –ø–æ—Ç–µ—Ä—è–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é.', '‚ùå'),
      { 
        parse_mode: 'HTML',
        ...Markup.inlineKeyboard([
          [Markup.button.callback('üöÄ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', 'start_game')]
        ])
      }
    );
    return ctx.scene.leave();
  }
  
  const games = gameManager.getGames();
  
  if (!games[gameId]) {
    ctx.reply(
      createStyledMessage('–û–®–ò–ë–ö–ê', '–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.', '‚ùå'),
      { 
        parse_mode: 'HTML',
        ...Markup.inlineKeyboard([
          [Markup.button.callback('üöÄ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', 'start_game')]
        ])
      }
    );
    return ctx.scene.leave();
  }
  
  const game = games[gameId];
  const userId = ctx.from.id;
  const users = userManager.getUsers();
  const funnyName = users[userId]?.funnyName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç answers, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
  if (!game.answers) game.answers = {};
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
  game.answers[userId] = {
    text: answer,
    username: funnyName,
    timestamp: new Date().toISOString()
  };
  
  // –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã –Ω–∞ collecting_answers, –µ—Å–ª–∏ –±—ã–ª waiting_players
  if (game.status === 'waiting_players') {
    game.status = 'collecting_answers';
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–≥—Ä—É
  gameManager.setGame(gameId, game);
  
  // –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤
  const answersCount = Object.keys(game.answers).length;
  
  // –°–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞
  ctx.reply(
    createStyledMessage('–û–¢–í–ï–¢ –ü–†–ò–ù–Ø–¢', 
      `–í–∞—à –æ—Ç–≤–µ—Ç: "${answer}" —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç!\n\n` +
      `<b>–í—Å–µ–≥–æ –æ—Ç–≤–µ—Ç–æ–≤:</b> ${answersCount}/${MAX_ANSWERS}\n\n` +
      `–û–∂–∏–¥–∞–π—Ç–µ –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.`, '‚úÖ'),
    { parse_mode: 'HTML' }
  );
  
  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –∏–≥—Ä—ã (–µ—Å–ª–∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–µ –æ–Ω —Å–∞–º)
  if (userId !== game.initiator) {
    ctx.telegram.sendMessage(
      game.initiator,
      createStyledMessage('–ù–û–í–´–ô –û–¢–í–ï–¢', 
        `–ò–≥—Ä–æ–∫ ${funnyName} –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤–æ–ø—Ä–æ—Å!\n\n` +
        `<b>–í—Å–µ–≥–æ –æ—Ç–≤–µ—Ç–æ–≤:</b> ${answersCount}/${MAX_ANSWERS}\n\n` +
        `${MAX_ANSWERS - answersCount > 0 ? `–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å: ${MAX_ANSWERS - answersCount} –æ—Ç–≤–µ—Ç–æ–≤` : '–í—Å–µ –∏–≥—Ä–æ–∫–∏ –æ—Ç–≤–µ—Ç–∏–ª–∏!'}`, 'üìù'),
      {
        parse_mode: 'HTML',
        ...Markup.inlineKeyboard([
          [Markup.button.callback('üó≥Ô∏è –ù–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', `start_voting_${gameId}`)]
        ])
      }
    );
  }
  
  // –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –Ω–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
  if (answersCount >= MAX_ANSWERS) {
    ctx.telegram.sendMessage(
      game.initiator,
      createStyledMessage('–í–°–ï –û–¢–í–ï–¢–´ –ü–û–õ–£–ß–ï–ù–´', 
        `–í—Å–µ ${MAX_ANSWERS} –∏–≥—Ä–æ–∫–æ–≤ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å!\n\n` +
        `–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ.`, 'üéâ'),
      {
        parse_mode: 'HTML',
        ...Markup.inlineKeyboard([
          [Markup.button.callback('üó≥Ô∏è –ù–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', `start_voting_${gameId}`)]
        ])
      }
    );
  }
  
  return ctx.scene.leave();
});

module.exports = answerScene;