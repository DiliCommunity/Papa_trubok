// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API_URL
let API_URL = '/api'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é API –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ç–æ–º –∂–µ –¥–æ–º–µ–Ω–µ
let navigationHistory = []; // –ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
let keyboardVisible = false; // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
let currentUser = null;
let currentGame = null;

console.log("papyrus.js –∑–∞–≥—Ä—É–∂–µ–Ω");

// –§—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º
async function testServerConnection() {
  try {
    console.log('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º...');
    const response = await fetch(`${API_URL}/ping`);
    
    if (response.ok) {
      const data = await response.json();
      console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:', data);
      return true;
    } else {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º:', response.status);
      return false;
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error);
    return false;
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    console.log('–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API_URL –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
        // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        const port = window.location.port || (window.location.protocol === 'https:' ? '443' : '80');
        API_URL = `${window.location.protocol}//${window.location.hostname}:${port}/api`;
    } else {
        // –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        API_URL = '/api';
    }
    console.log('API_URL –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', API_URL);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    currentUser = {
        id: getTelegramUserId(),
        name: '',
        anonymous: false // –í—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç false
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º
    testServerConnection();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    checkAuth();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
    initButtonHandlers();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è –∏–≥—Ä–∞
    checkLastGame();
    
    // –ï—Å–ª–∏ –≤ URL –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä gameId, –ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ
    const urlParams = new URLSearchParams(window.location.search);
    const gameIdFromUrl = urlParams.get('gameId');
    if (gameIdFromUrl) {
        console.log('–ù–∞–π–¥–µ–Ω gameId –≤ URL:', gameIdFromUrl);
        currentGame = { id: gameIdFromUrl };
        joinGameRoom(gameIdFromUrl);
    } else {
        // –ò–Ω–∞—á–µ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä
        loadGames();
    }
});

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
function checkAuth() {
  try {
    const authData = localStorage.getItem('papaTrubokAuth');
    if (!authData) {
      console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
      window.location.href = 'register.html';
      return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const parsedAuthData = JSON.parse(authData);
    if (!parsedAuthData || !parsedAuthData.userId || !parsedAuthData.method) {
      console.log('–î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
      localStorage.removeItem('papaTrubokAuth');
      window.location.href = 'register.html';
      return false;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (parsedAuthData.userId) {
      window.currentUser = window.currentUser || {};
      window.currentUser.id = parsedAuthData.userId;
      if (parsedAuthData.name) {
        window.currentUser.name = parsedAuthData.name;
      }
    }
    
    console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', parsedAuthData.method);
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
    window.location.href = 'register.html';
    return false;
  }
}

// –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Telegram WebApp
// –ï—Å–ª–∏ –º—ã –≤–Ω—É—Ç—Ä–∏ Telegram WebApp, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –æ–±—ä–µ–∫—Ç, –∏–Ω–∞—á–µ —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
if (!window.Telegram || !window.Telegram.WebApp) {
  console.log("Telegram WebApp –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è");
  window.Telegram = {
    WebApp: {
      initDataUnsafe: {
        user: {
          id: Math.floor(Math.random() * 1000000),
          first_name: '',
          username: '',
        }
      },
      BackButton: {
        show: function() { console.log('BackButton.show –≤—ã–∑–≤–∞–Ω'); },
        hide: function() { console.log('BackButton.hide –≤—ã–∑–≤–∞–Ω'); },
        onClick: function(callback) { console.log('BackButton.onClick –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω'); },
        offClick: function(callback) { console.log('BackButton.offClick –≤—ã–∑–≤–∞–Ω'); },
        isVisible: false
      },
      ready: function() { console.log('WebApp.ready –≤—ã–∑–≤–∞–Ω'); },
      expand: function() { console.log('WebApp.expand –≤—ã–∑–≤–∞–Ω'); },
      close: function() { console.log('WebApp.close –≤—ã–∑–≤–∞–Ω'); },
      isExpanded: true,
      HapticFeedback: {
        impactOccurred: function(style) { console.log('HapticFeedback.impactOccurred –≤—ã–∑–≤–∞–Ω —Å', style); }
      }
    }
  };
} else {
  console.log("Telegram WebApp –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏");
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getTelegramUserId() {
  if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initDataUnsafe && window.Telegram.WebApp.initDataUnsafe.user) {
    return window.Telegram.WebApp.initDataUnsafe.user.id || Math.floor(Math.random() * 1000000);
  }
  return Math.floor(Math.random() * 1000000);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
function getTelegramUserName() {
  if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initDataUnsafe && window.Telegram.WebApp.initDataUnsafe.user) {
    const user = window.Telegram.WebApp.initDataUnsafe.user;
    if (user.username) return user.username;
    if (user.first_name) {
      if (user.last_name) return `${user.first_name} ${user.last_name}`;
      return user.first_name;
    }
  }
  return '';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫—Ä–∞—Å–∏–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'info') {
  // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const notification = document.createElement('div');
  notification.className = `papyrus-notification ${type}`;
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  let icon = 'üìú';
  if (type === 'success') icon = '‚úÖ';
  else if (type === 'error') icon = '‚ùå';
  else if (type === 'warning') icon = '‚ö†Ô∏è';
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
  notification.innerHTML = `
    <div class="notification-icon">${icon}</div>
    <div class="notification-message">${message}</div>
    <div class="notification-close" onclick="this.parentNode.remove()">√ó</div>
  `;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
  document.body.appendChild(notification);
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
  setTimeout(() => {
    notification.style.transform = 'translateX(0)';
    notification.style.opacity = '1';
  }, 10);
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
  setTimeout(() => {
    notification.style.transform = 'translateX(400px)';
    notification.style.opacity = '0';
    setTimeout(() => notification.remove(), 500);
  }, 5000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –∫–∞–∫–æ–π-–ª–∏–±–æ —ç–ª–µ–º–µ–Ω—Ç –≤–≤–æ–¥–∞
function isInputActive() {
  const activeElement = document.activeElement;
  return activeElement && (
    activeElement.tagName === 'INPUT' || 
    activeElement.tagName === 'TEXTAREA' ||
    activeElement.isContentEditable
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
function hideKeyboard() {
  if (!isInputActive()) return false;
  
  document.activeElement.blur();
  return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —ç–∫—Ä–∞–Ω–æ–≤ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –∏—Å—Ç–æ—Ä–∏–∏
function showScreen(screenId) {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω
  let currentScreenId = null;
  const screens = [
    'startScreen', 'nameScreen', 'gameScreen', 'questionScreen',
    'answerScreen', 'votingScreen', 'resultsScreen', 'roomScreen'
  ];
  
  for (const id of screens) {
    const screen = document.getElementById(id);
    if (screen && screen.style.display === 'block') {
      currentScreenId = id;
      break;
    }
  }
  
  console.log(`–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω: ${screenId} (–ø—Ä–µ–¥—ã–¥—É—â–∏–π: ${currentScreenId})`);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –Ω–æ–≤—ã–π —ç–∫—Ä–∞–Ω
  if (currentScreenId && currentScreenId !== screenId) {
    navigationHistory.push(currentScreenId);
    console.log(`–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: ${navigationHistory.join(' -> ')}`);
  }
  
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —ç–∫—Ä–∞–Ω—ã
  screens.forEach(id => {
    const screen = document.getElementById(id);
    if (screen) {
      screen.style.display = 'none';
    }
  });
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —ç–∫—Ä–∞–Ω
  const screenToShow = document.getElementById(screenId);
  if (screenToShow) {
    screenToShow.style.display = 'block';
    
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥" –≤ Telegram
    if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.BackButton) {
      if (navigationHistory.length > 0 && screenId !== 'startScreen') {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥, –µ—Å–ª–∏ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è –∏ –Ω–µ –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
        window.Telegram.WebApp.BackButton.show();
      } else {
        // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
        window.Telegram.WebApp.BackButton.hide();
      }
    }
    
    // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
    if (screenId === 'nameScreen') {
      const nameInput = document.getElementById('nameInput');
      if (nameInput) nameInput.focus();
    } else if (screenId === 'questionScreen') {
      const questionInput = document.getElementById('questionInput');
      if (questionInput) questionInput.focus();
    } else if (screenId === 'answerScreen') {
      const answerInput = document.getElementById('answerInput');
      if (answerInput) answerInput.focus();
    }
  } else {
    console.error(`–≠–∫—Ä–∞–Ω ${screenId} –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥
function goBack() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω—É–∂–Ω–æ –ª–∏ —Å–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
  if (hideKeyboard()) {
    console.log('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã—Ç–∞');
    keyboardVisible = false;
    return; // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è, –µ—Å–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—ã–ª–∞ —Å–∫—Ä—ã—Ç–∞
  }

  if (navigationHistory.length > 0) {
    const previousScreen = navigationHistory.pop();
    console.log(`–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —ç–∫—Ä–∞–Ω—É: ${previousScreen}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω –±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    const screens = [
      'startScreen', 'nameScreen', 'gameScreen', 'questionScreen',
      'answerScreen', 'votingScreen', 'resultsScreen', 'roomScreen'
    ];
    
    screens.forEach(id => {
      const screen = document.getElementById(id);
      if (screen) {
        screen.style.display = id === previousScreen ? 'block' : 'none';
      }
    });
    
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥" –≤ Telegram
    if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.BackButton) {
      if (navigationHistory.length > 0 && previousScreen !== 'startScreen') {
        window.Telegram.WebApp.BackButton.show();
      } else {
        window.Telegram.WebApp.BackButton.hide();
      }
    }
  } else {
    // –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
    showScreen('startScreen');
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
window.startApp = function() {
  console.log("–í—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è startApp()");
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebApp
  if (window.Telegram && window.Telegram.WebApp) {
    window.Telegram.WebApp.ready();
    window.Telegram.WebApp.expand();
  }
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —ç–∫—Ä–∞–Ω—É –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
  showScreen('nameScreen');
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø—Ü–∏–∏ –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏
  showNameChoiceOptions();
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
document.addEventListener('focusin', function(e) {
  if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {
    console.log('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
    keyboardVisible = true;
    document.body.classList.add('keyboard-open');
  }
});

document.addEventListener('focusout', function(e) {
  if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setTimeout(() => {
      if (!isInputActive()) {
        console.log('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã—Ç–∞');
        keyboardVisible = false;
        document.body.classList.remove('keyboard-open');
      }
    }, 100);
  }
});

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–π –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –Ω–∞ Android
window.addEventListener('popstate', function(e) {
  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–∞
  if (keyboardVisible) {
    e.preventDefault();
    hideKeyboard();
  } else {
    goBack();
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', function(event) {
  console.log('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è...');
  
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∏–≥—Ä–µ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  if (currentGame && currentGame.id) {
    console.log(`–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∏–≥—Ä–µ ${currentGame.id}...`);
    
    try {
      localStorage.setItem('papaTrubok_lastGame', JSON.stringify({
        gameId: currentGame.id,
        timestamp: Date.now()
      }));
    } catch (error) {
      console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä–µ:', error);
    }
  }
});

// –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞
function checkLastGame() {
  try {
    const lastGameInfo = localStorage.getItem('papaTrubok_lastGame');
    if (lastGameInfo) {
      const lastGame = JSON.parse(lastGameInfo);
      const currentTime = Date.now();
      
      // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω—å—à–µ 30 –º–∏–Ω—É—Ç —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä—ã, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–µ—Ä–Ω—É—Ç—å—Å—è
      if (currentTime - lastGame.timestamp < 30 * 60 * 1000) {
        showNotification(`–£ –≤–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞. –•–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è?`, 'info');
        
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∏–≥—Ä—É
        const returnToGameBtn = document.createElement('button');
        returnToGameBtn.className = 'papyrus-button shimmer';
        returnToGameBtn.textContent = '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∏–≥—Ä—É';
        returnToGameBtn.addEventListener('click', function() {
          if (currentUser && currentUser.name) {
            joinGameRoom(lastGame.gameId);
          } else {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–≥—Ä—ã, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
            localStorage.setItem('papaTrubok_pendingGameId', lastGame.gameId);
            showScreen('nameScreen');
          }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ DOM
        const startButtons = document.querySelector('#startScreen .button-container');
        if (startButtons) {
          startButtons.prepend(returnToGameBtn);
        }
      } else {
        // –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        localStorage.removeItem('papaTrubok_lastGame');
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä—ã:', error);
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
  console.log('DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
  checkAuth();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ã–ª–∞ –ª–∏ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞
  checkLastGame();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫
  initButtonHandlers();
  
  // –î–æ–±–∞–≤–ª—è–µ–º history state, —á—Ç–æ–±—ã —Å—Ä–∞–±–æ—Ç–∞–ª popstate
  history.pushState({page: 1}, "–ü–∞–ø–∞ –¢—Ä—É–±–æ–∫", null);
  
  // –î–ª—è Telegram WebApp —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
  if (window.Telegram && window.Telegram.WebApp) {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
    window.Telegram.WebApp.ready();
    window.Telegram.WebApp.expand();
    
    // –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω, –≤–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è
    if (typeof window.Telegram.WebApp.enableClosingConfirmation === 'function') {
      window.Telegram.WebApp.enableClosingConfirmation();
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" Telegram
    if (window.Telegram.WebApp.BackButton) {
      window.Telegram.WebApp.BackButton.onClick(function() {
        goBack();
      });
    }
  }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫
function initButtonHandlers() {
  console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
  
  // –¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã
  const testCreateGameBtn = document.getElementById('testCreateGameBtn');
  if (testCreateGameBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ testCreateGameBtn');
    testCreateGameBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã"');
      testCreateGame();
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ testCreateGameBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  const startAppBtn = document.getElementById('startAppBtn');
  if (startAppBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ startAppBtn');
    startAppBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É"');
      window.startApp();
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ startAppBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
  const backToStartBtn = document.getElementById('backToStartBtn');
  if (backToStartBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ backToStartBtn');
    backToStartBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ"');
      showScreen('startScreen');
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ backToStartBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ —Ñ–æ—Ä–º—É –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏
  const backToNameChoiceBtn = document.getElementById('backToNameChoiceBtn');
  if (backToNameChoiceBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ backToNameChoiceBtn');
    backToNameChoiceBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –≤ —Ñ–æ—Ä–º–µ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏');
      showNameChoiceOptions();
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ backToNameChoiceBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–º–µ–Ω
  const backToNameChoiceFromExistingBtn = document.getElementById('backToNameChoiceFromExistingBtn');
  if (backToNameChoiceFromExistingBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ backToNameChoiceFromExistingBtn');
    backToNameChoiceFromExistingBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –≤ —Å–ø–∏—Å–∫–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–º–µ–Ω');
      showNameChoiceOptions();
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ backToNameChoiceFromExistingBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏
  const submitNameBtn = document.getElementById('submitNameBtn');
  if (submitNameBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ submitNameBtn');
    submitNameBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–º—è"');
      saveName();
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ submitNameBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
  const nameInput = document.getElementById('nameInput');
  if (nameInput) {
    console.log('–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏');
    nameInput.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        console.log('–ù–∞–∂–∞—Ç Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏');
        e.preventDefault();
        saveName();
      }
    });
  } else {
    console.warn('–ü–æ–ª–µ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
  
  // –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã
  const createGameBtn = document.getElementById('createGameBtn');
  if (createGameBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ createGameBtn');
    createGameBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É"');
      if (!currentUser.name) {
        console.warn('–ù–µ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏');
        showNotification('–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∏–º—è', 'warning');
        showScreen('nameScreen');
        return;
      }
      showScreen('questionScreen');
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ createGameBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∏–≥—Ä
  const refreshGamesBtn = document.getElementById('refreshGamesBtn');
  if (refreshGamesBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ refreshGamesBtn');
    refreshGamesBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä"');
      showNotification('–û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä...', 'info');
      loadGames();
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ refreshGamesBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é –∏–∑ —ç–∫—Ä–∞–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
  const backToMainFromQuestionBtn = document.getElementById('backToMainFromQuestionBtn');
  if (backToMainFromQuestionBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ backToMainFromQuestionBtn');
    backToMainFromQuestionBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞');
      showScreen('gameScreen');
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ backToMainFromQuestionBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã —Å –≤–≤–µ–¥–µ–Ω–Ω—ã–º –≤–æ–ø—Ä–æ—Å–æ–º
  const submitQuestionBtn = document.getElementById('submitQuestionBtn');
  if (submitQuestionBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ submitQuestionBtn');
    submitQuestionBtn.addEventListener('click', async function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É" –Ω–∞ —ç–∫—Ä–∞–Ω–µ –≤–æ–ø—Ä–æ—Å–∞');
      const questionInput = document.getElementById('questionInput');
      if (!questionInput || !questionInput.value.trim()) {
        console.warn('–ù–µ –≤–≤–µ–¥–µ–Ω –≤–æ–ø—Ä–æ—Å');
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å!', 'warning');
        return;
      }
      
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        if (!currentUser || !currentUser.id || !currentUser.name) {
          console.error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ', currentUser);
          showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è!', 'warning');
          showScreen('nameScreen');
          return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        const question = questionInput.value.trim();
        const creatorName = currentUser.name || '–ê–Ω–æ–Ω–∏–º–Ω—ã–π';
        
        console.log(`–°–æ–∑–¥–∞–µ–º –∏–≥—Ä—É —Å –≤–æ–ø—Ä–æ—Å–æ–º: "${question}", —Å–æ–∑–¥–∞—Ç–µ–ª—å: ${creatorName} (ID: ${currentUser.id})`);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã
        submitQuestionBtn.disabled = true;
        submitQuestionBtn.textContent = '–°–æ–∑–¥–∞–Ω–∏–µ...';
        
        // –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        console.log('API_URL:', API_URL);
        
        const requestData = {
          question: question,
          userId: currentUser.id,
          userName: creatorName
        };
        
        console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã...');
        console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:', JSON.stringify(requestData));
        
        try {
          const response = await fetch(`${API_URL}/games`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestData)
          });
          
          console.log('–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.status);
          
          if (!response.ok) {
            console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã, —Å—Ç–∞—Ç—É—Å: ${response.status}`);
            const errorText = await response.text();
            console.error('–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:', errorText);
            throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã: ${response.status}`);
          }
          
          const game = await response.json();
          console.log('–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞, –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', game);
          
          // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
          questionInput.value = '';
          
          // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ–∑–¥–∞–Ω–Ω—É—é –∏–≥—Ä—É
          currentGame = {
            id: game.gameId || game.id,
            status: 'collecting_answers',
            isCreator: true,
            currentQuestion: question
          };
          
          console.log('–î–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞:', currentGame);
          
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã
          showNotification('–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!', 'success');
          
          // –ò–Ω–æ–≥–¥–∞ —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å id –≤–º–µ—Å—Ç–æ gameId, –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞
          const gameId = game.gameId || game.id;
          if (gameId) {
            console.log('–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∏–≥—Ä—É —Å ID:', gameId);
            joinGameRoom(gameId);
          } else {
            console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID —Å–æ–∑–¥–∞–Ω–Ω–æ–π –∏–≥—Ä—ã');
            showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –∏–≥—Ä—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä.', 'warning');
            showScreen('gameScreen');
            loadGames();
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error);
          showNotification(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É: ${error.message}`, 'error');
          // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã
          if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError')) {
            showNotification('–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã.', 'warning');
          }
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã:', error);
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
      } finally {
        submitQuestionBtn.disabled = false;
        submitQuestionBtn.textContent = '–°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É';
      }
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ submitQuestionBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é –∏–∑ —ç–∫—Ä–∞–Ω–∞ –æ—Ç–≤–µ—Ç–∞
  const backToMainFromAnswerBtn = document.getElementById('backToMainFromAnswerBtn');
  if (backToMainFromAnswerBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ backToMainFromAnswerBtn');
    backToMainFromAnswerBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –Ω–∞ —ç–∫—Ä–∞–Ω–µ –æ—Ç–≤–µ—Ç–∞');
      showScreen('roomScreen');
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ backToMainFromAnswerBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
  const submitAnswerBtn = document.getElementById('submitAnswerBtn');
  if (submitAnswerBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ submitAnswerBtn');
    submitAnswerBtn.addEventListener('click', async function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç"');
      const answerInput = document.getElementById('answerInput');
      if (!answerInput || !answerInput.value.trim()) {
        console.warn('–ù–µ –≤–≤–µ–¥–µ–Ω –æ—Ç–≤–µ—Ç');
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç!', 'warning');
        return;
      }
      
      if (!currentGame || !currentGame.id) {
        console.error('–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä–µ');
        showNotification('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–≥—Ä—É', 'error');
        return;
      }
      
      try {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        const answer = answerInput.value.trim();
        console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç: "${answer}" –¥–ª—è –∏–≥—Ä—ã ${currentGame.id}`);
        
        submitAnswerBtn.disabled = true;
        submitAnswerBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
        
        const response = await fetch(`${API_URL}/games/${currentGame.id}/answer`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            userId: currentUser.id,
            userName: currentUser.name,
            answer: answer
          })
        });
        
        if (!response.ok) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞, —Å—Ç–∞—Ç—É—Å: ${response.status}`);
          throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞: ${response.status}`);
        }
        
        console.log('–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
        
        // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
        answerInput.value = '';
        
        showNotification('–í–∞—à –æ—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç!', 'success');
        showScreen('roomScreen');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–Ω–∞—Ç–µ
        checkGameStatus();
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞:', error);
        showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
      } finally {
        submitAnswerBtn.disabled = false;
        submitAnswerBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç';
      }
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ submitAnswerBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤
  const submitVotesBtn = document.getElementById('submitVotesBtn');
  if (submitVotesBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ submitVotesBtn');
    submitVotesBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å"');
      submitVotes();
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ submitVotesBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –Ω–∞ —ç–∫—Ä–∞–Ω–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
  const backToMainFromVotingBtn = document.getElementById('backToMainFromVotingBtn');
  if (backToMainFromVotingBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ backToMainFromVotingBtn');
    backToMainFromVotingBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –Ω–∞ —ç–∫—Ä–∞–Ω–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è');
      showScreen('roomScreen');
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ backToMainFromVotingBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const backToMainBtn = document.getElementById('backToMainBtn');
  if (backToMainBtn) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ backToMainBtn');
    backToMainBtn.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é" –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
      showScreen('gameScreen');
      loadGames();
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ backToMainBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–º–Ω–∞—Ç—ã –∏–≥—Ä—ã
  const answerButton = document.getElementById('answerButton');
  if (answerButton) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ answerButton');
    answerButton.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å" –≤ –∫–æ–º–Ω–∞—Ç–µ');
      if (currentGame && currentGame.currentQuestion) {
        console.log(`–ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Ç–≤–µ—Ç—É –Ω–∞ –≤–æ–ø—Ä–æ—Å: "${currentGame.currentQuestion}"`);
        showAnswerScreen(currentGame.currentQuestion);
      } else {
        console.error('–û—à–∏–±–∫–∞: –≤–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
        showNotification('–û—à–∏–±–∫–∞: –≤–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω', 'error');
      }
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ answerButton –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
  const startVotingButton = document.getElementById('startVotingButton');
  if (startVotingButton) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ startVotingButton');
    startVotingButton.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ"');
      if (currentGame && currentGame.id) {
        console.log(`–ó–∞–ø—É—Å–∫–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –¥–ª—è –∏–≥—Ä—ã ${currentGame.id}`);
        startVoting(currentGame.id);
      } else {
        console.error('–û—à–∏–±–∫–∞: –∏–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        showNotification('–û—à–∏–±–∫–∞: –∏–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', 'error');
      }
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ startVotingButton –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤
  const viewAnswersButton = document.getElementById('viewAnswersButton');
  if (viewAnswersButton) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ viewAnswersButton');
    viewAnswersButton.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–≤–µ—Ç–æ–≤"');
      if (currentGame && currentGame.id) {
        console.log(`–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è, –∏–≥—Ä–∞ ${currentGame.id}`);
        loadVotingOptions(currentGame.id);
      } else {
        console.error('–û—à–∏–±–∫–∞: –∏–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        showNotification('–û—à–∏–±–∫–∞: –∏–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', 'error');
      }
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ viewAnswersButton –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã
  const leaveRoomButton = document.getElementById('leaveRoomButton');
  if (leaveRoomButton) {
    console.log('–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ leaveRoomButton');
    leaveRoomButton.addEventListener('click', function() {
      console.log('–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü–æ–∫–∏–Ω—É—Ç—å –∫–æ–º–Ω–∞—Ç—É"');
      currentGame = null;
      console.log('–°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –∏–≥—Ä');
      showScreen('gameScreen');
      loadGames();
    });
  } else {
    console.warn('–ö–Ω–æ–ø–∫–∞ leaveRoomButton –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }
  
  // –î–æ–±–∞–≤–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∫–Ω–æ–ø–æ–∫
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≤–≤–æ–¥–∞ –≤ –ø–æ–ª–µ –≤–æ–ø—Ä–æ—Å–∞
  const questionInput = document.getElementById('questionInput');
  if (questionInput) {
    console.log('–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–∞');
    questionInput.addEventListener('keypress', function(e) {
      if (e.key === 'Enter' && e.ctrlKey) {
        console.log('–ù–∞–∂–∞—Ç Ctrl+Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–∞');
        e.preventDefault();
        document.getElementById('submitQuestionBtn')?.click();
      }
    });
  } else {
    console.warn('–ü–æ–ª–µ –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞
  const answerInput = document.getElementById('answerInput');
  if (answerInput) {
    console.log('–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞');
    answerInput.addEventListener('keypress', function(e) {
      if (e.key === 'Enter' && e.ctrlKey) {
        console.log('–ù–∞–∂–∞—Ç Ctrl+Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞');
        e.preventDefault();
        document.getElementById('submitAnswerBtn')?.click();
      }
    });
  } else {
    console.warn('–ü–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
  
  console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø—Ü–∏–π –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏
function showNameChoiceOptions() {
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
  const sections = ['newNameSection', 'existingNameSection'];
  sections.forEach(id => {
    const section = document.getElementById(id);
    if (section) section.style.display = 'none';
  });
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
  const choiceButtons = document.getElementById('nameChoiceButtons');
  if (choiceButtons) {
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    let authName = '';
    try {
      const authData = localStorage.getItem('papaTrubokAuth');
      if (authData) {
        const parsedAuthData = JSON.parse(authData);
        if (parsedAuthData && parsedAuthData.name) {
          authName = parsedAuthData.name;
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
    }
    
    // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è –∫–Ω–æ–ø–æ–∫
    choiceButtons.innerHTML = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–º–µ–Ω–∏ –∏–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    if (authName) {
      const authNameBtn = document.createElement('button');
      authNameBtn.className = 'papyrus-button shimmer';
      authNameBtn.textContent = `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º—è: ${authName}`;
      authNameBtn.addEventListener('click', function() {
        currentUser.name = authName;
        currentUser.anonymous = false;
        showScreen('gameScreen');
        showNotification(`–ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è: ${authName}`, 'success');
        loadGames();
      });
      choiceButtons.appendChild(authNameBtn);
    }
    
    // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏–¥—É–º–∞—Ç—å –¥—Ä—É–≥–æ–µ –∏–º—è"
    const newNameBtn = document.createElement('button');
    newNameBtn.className = 'papyrus-button shimmer';
    newNameBtn.textContent = '–ü—Ä–∏–¥—É–º–∞—Ç—å –¥—Ä—É–≥–æ–µ –∏–º—è';
    newNameBtn.addEventListener('click', showNewNameForm);
    choiceButtons.appendChild(newNameBtn);
    
    // –ö–Ω–æ–ø–∫–∞ "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∏–º—è"
    const existingNameBtn = document.createElement('button');
    existingNameBtn.className = 'papyrus-button shimmer';
    existingNameBtn.textContent = '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ –∏–º—è';
    existingNameBtn.addEventListener('click', showExistingNames);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω
    const savedNames = getSavedNames();
    if (savedNames.length === 0) {
      existingNameBtn.classList.add('disabled');
      existingNameBtn.disabled = true;
      existingNameBtn.title = '–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω';
    }
    
    choiceButtons.appendChild(existingNameBtn);
    choiceButtons.style.display = 'block';
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function saveName() {
  const nameInput = document.getElementById('nameInput');
  if (!nameInput || !nameInput.value.trim()) {
    showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è!', 'warning');
    return;
  }
  
  const name = nameInput.value.trim();
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è
  currentUser.name = name;
  currentUser.anonymous = false;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è –≤ —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö
  const savedNames = getSavedNames();
  if (!savedNames.includes(name)) {
    savedNames.push(name);
    saveNamesToStorage(savedNames);
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –≤ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  try {
    const authData = localStorage.getItem('papaTrubokAuth');
    if (authData) {
      const parsedAuthData = JSON.parse(authData);
      if (parsedAuthData) {
        parsedAuthData.name = name;
        localStorage.setItem('papaTrubokAuth', JSON.stringify(parsedAuthData));
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –≤ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
  }
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω –∏–≥—Ä
  showScreen('gameScreen');
  showNotification(`–ò–º—è "${name}" —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!`, 'success');
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä
  loadGames();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
function getSavedNames() {
  try {
    const savedNamesJson = localStorage.getItem('papaTrubok_savedNames');
    if (savedNamesJson) {
      const savedNames = JSON.parse(savedNamesJson);
      if (Array.isArray(savedNames)) {
        return savedNames;
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω:', error);
  }
  
  return [];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
function saveNamesToStorage(names) {
  try {
    localStorage.setItem('papaTrubok_savedNames', JSON.stringify(names));
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–º–µ–Ω:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏
function showNewNameForm() {
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –æ–ø—Ü–∏–π –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤–≤–æ–¥–∞
  const nameChoiceButtons = document.getElementById('nameChoiceButtons');
  const newNameSection = document.getElementById('newNameSection');
  
  if (nameChoiceButtons) nameChoiceButtons.style.display = 'none';
  if (newNameSection) {
    newNameSection.style.display = 'block';
    
    // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
    const nameInput = document.getElementById('nameInput');
    if (nameInput) {
      nameInput.value = '';
      nameInput.focus();
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–º–µ–Ω
function showExistingNames() {
  const nameChoiceButtons = document.getElementById('nameChoiceButtons');
  const existingNameSection = document.getElementById('existingNameSection');
  const savedNamesList = document.getElementById('savedNamesList');
  
  if (nameChoiceButtons) nameChoiceButtons.style.display = 'none';
  
  if (existingNameSection && savedNamesList) {
    existingNameSection.style.display = 'block';
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–º–µ–Ω–∞
    const savedNames = getSavedNames();
    
    // –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω
    if (savedNames.length === 0) {
      savedNamesList.innerHTML = '<p class="no-games">–£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω</p>';
      return;
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω
    let namesHtml = '';
    
    savedNames.forEach(name => {
      namesHtml += `
        <div class="game-item">
          <div class="game-info">
            <h3>${name}</h3>
          </div>
          <div class="game-actions">
            <button class="papyrus-button small-btn use-name-btn" data-name="${name}">–í—ã–±—Ä–∞—Ç—å</button>
            <button class="papyrus-button small-btn delete-name-btn" data-name="${name}">–£–¥–∞–ª–∏—Ç—å</button>
          </div>
        </div>
      `;
    });
    
    savedNamesList.innerHTML = namesHtml;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    const useNameBtns = savedNamesList.querySelectorAll('.use-name-btn');
    useNameBtns.forEach(btn => {
      btn.addEventListener('click', function() {
        const name = this.getAttribute('data-name');
        selectExistingName(name);
      });
    });
    
    const deleteNameBtns = savedNamesList.querySelectorAll('.delete-name-btn');
    deleteNameBtns.forEach(btn => {
      btn.addEventListener('click', function() {
        const name = this.getAttribute('data-name');
        deleteExistingName(name);
      });
    });
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–º–µ–Ω–∏
function selectExistingName(name) {
  currentUser.name = name;
  currentUser.anonymous = false;
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –≤ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  try {
    const authData = localStorage.getItem('papaTrubokAuth');
    if (authData) {
      const parsedAuthData = JSON.parse(authData);
      if (parsedAuthData) {
        parsedAuthData.name = name;
        localStorage.setItem('papaTrubokAuth', JSON.stringify(parsedAuthData));
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –≤ –¥–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
  }
  
  showScreen('gameScreen');
  showNotification(`–í—ã–±—Ä–∞–Ω–æ –∏–º—è: ${name}`, 'success');
  loadGames();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö
function deleteExistingName(name) {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω
  const savedNames = getSavedNames();
  
  // –£–¥–∞–ª—è–µ–º –∏–º—è –∏–∑ —Å–ø–∏—Å–∫–∞
  const updatedNames = savedNames.filter(savedName => savedName !== name);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
  saveNamesToStorage(updatedNames);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö –∏–º–µ–Ω
  showExistingNames();
  showNotification(`–ò–º—è "${name}" —É–¥–∞–ª–µ–Ω–æ`, 'info');
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä
async function loadGames() {
  const gamesList = document.getElementById('gamesList');
  if (!gamesList) return;
  
  try {
    gamesList.innerHTML = '<p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä...</p>';
    
    const response = await fetch(`${API_URL}/games`);
    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
    }
    
    const games = await response.json();
    
    if (games.length === 0) {
      gamesList.innerHTML = '<p>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é!</p>';
      return;
    }
    
    gamesList.innerHTML = '';
    
    games.forEach(game => {
      const gameRoom = document.createElement('div');
      gameRoom.className = 'game-room';
      
      gameRoom.innerHTML = `
        <div class="game-room-header">
          <h2 class="game-room-title">–ö–æ–º–Ω–∞—Ç–∞: ${game.name}</h2>
          <span class="game-room-status">${getStatusText(game.status)}</span>
        </div>
        
        <div class="game-room-info">
          <div class="game-room-players">
            <span class="game-room-player">–ò–≥—Ä–æ–∫–æ–≤: ${game.count}/10</span>
          </div>
        </div>
        
        <div class="game-room-actions">
          <button class="join-room-btn" onclick="joinGameRoom('${game.id}')">
            –í–æ–π—Ç–∏ –≤ –∫–æ–º–Ω–∞—Ç—É
          </button>
        </div>
      `;
      
      gamesList.appendChild(gameRoom);
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä:', error);
    gamesList.innerHTML = '<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–≥—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>';
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ
async function joinGameRoom(gameId) {
  console.log(`–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ–º—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ ${gameId}`);
  
  if (!currentUser || !currentUser.id) {
    console.warn('–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    showNotification('–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∏–º—è', 'warning');
    showScreen('nameScreen');
    return;
  }
  
  if (!currentUser.name) {
    console.warn('–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    showNotification('–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∏–º—è', 'warning');
    showScreen('nameScreen');
    return;
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  showNotification('–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ...', 'info');
  
  try {
    console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–µ ${gameId}`);
    console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:', JSON.stringify({
      userId: currentUser.id,
      username: currentUser.name
    }));
    
    const response = await fetch(`${API_URL}/games/${gameId}/join`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        userId: currentUser.id,
        userName: currentUser.name  // –ò–∑–º–µ–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞ userName, —á—Ç–æ–±—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –æ–∂–∏–¥–∞–Ω–∏—è–º —Å–µ—Ä–≤–µ—Ä–∞
      })
    });
    
    if (!response.ok) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –∫ –∫–æ–º–Ω–∞—Ç–µ, —Å—Ç–∞—Ç—É—Å: ${response.status}`);
      try {
        const errorData = await response.json();
        console.error('–î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:', errorData);
        throw new Error(errorData.error || `–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
      } catch (jsonError) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç –∫–∞–∫ JSON:', await response.text());
        throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
      }
    }
    
    const gameData = await response.json();
    console.log('–î–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã –ø–æ—Å–ª–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', gameData);
    
    // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã
    currentGame = {
      id: gameId,
      status: gameData.status,
      currentQuestion: gameData.currentQuestion || '–í–æ–ø—Ä–æ—Å –Ω–µ —É–∫–∞–∑–∞–Ω',
      isCreator: gameData.isCreator || false,
      initiatorName: gameData.initiatorName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π',
      answersCount: gameData.answers || 0,
      participants: gameData.participants || []
    };
    
    console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã:', currentGame);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∫–æ–º–Ω–∞—Ç—ã
    showScreen('roomScreen');
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–Ω–∞—Ç–µ
    updateRoomInfo();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–≤–µ—Ç–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –≤–æ–ø—Ä–æ—Å
    checkUserAnswerStatus(gameId);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–º–Ω–∞—Ç—ã
    startRoomUpdates(gameId);
    
    showNotification('–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∫–æ–º–Ω–∞—Ç–µ!', 'success');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –∫ –∫–æ–º–Ω–∞—Ç–µ:', error);
    showNotification(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ: ${error.message}`, 'error');
    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –∏–≥—Ä
    showScreen('gameScreen');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–Ω–∞—Ç–µ
function updateRoomInfo() {
  if (!currentGame) {
    console.error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏');
    return;
  }
  
  console.log('–û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–Ω–∞—Ç–µ:', currentGame);
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–º–Ω–∞—Ç—ã
  const roomTitle = document.getElementById('roomTitle');
  if (roomTitle) {
    roomTitle.textContent = `–ö–æ–º–Ω–∞—Ç–∞ –∏–≥—Ä—ã #${currentGame.id}`;
  }
  
  // –í–æ–ø—Ä–æ—Å
  const roomQuestion = document.getElementById('roomQuestion');
  if (roomQuestion) {
    roomQuestion.textContent = currentGame.currentQuestion || '–í–æ–ø—Ä–æ—Å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...';
  }
  
  // –°—Ç–∞—Ç—É—Å
  const roomStatus = document.getElementById('roomStatus');
  if (roomStatus) {
    roomStatus.textContent = getStatusText(currentGame.status);
  }
  
  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤
  const roomAnswersCount = document.getElementById('roomAnswersCount');
  if (roomAnswersCount) {
    roomAnswersCount.textContent = currentGame.answersCount || 0;
  }
  
  // –£–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –∫–æ–º–Ω–∞—Ç–µ
  updateRoomButtons();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –≤ –∫–æ–º–Ω–∞—Ç–µ
function updateRoomButtons() {
  if (!currentGame) {
    console.error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫');
    return;
  }
  
  console.log('–û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∫–æ–º–Ω–∞—Ç–µ. –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã:', currentGame.status);
  
  const answerButton = document.getElementById('answerButton');
  const viewAnswersButton = document.getElementById('viewAnswersButton');
  const startVotingButton = document.getElementById('startVotingButton');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–≤–µ—Ç–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
  checkIfAnswered(currentGame.id).then(hasAnswered => {
    console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª: ${hasAnswered}`);
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–≤–µ—Ç–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –∏ —Å—Ç–∞—Ç—É—Å "—Å–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤"
    if (answerButton) {
      if (currentGame.status === 'collecting_answers' && !hasAnswered) {
        console.log('–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–≤–µ—Ç–∞');
        answerButton.style.display = 'block';
      } else {
        console.log('–°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–≤–µ—Ç–∞');
        answerButton.style.display = 'none';
      }
    }
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª, –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ–≥–æ –æ—Ç–≤–µ—Ç–∞
    if (hasAnswered) {
      updateUserAnswerDisplay();
    }
  });
  
  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é, –∫–æ–≥–¥–∞ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã 3 –æ—Ç–≤–µ—Ç–∞
  if (startVotingButton) {
    if (currentGame.status === 'collecting_answers' && currentGame.isCreator && currentGame.answersCount >= 3) {
      console.log('–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è)');
      startVotingButton.style.display = 'block';
    } else {
      console.log('–°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è');
      startVotingButton.style.display = 'none';
    }
  }
  
  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤ —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —Å—Ç–∞—Ç—É—Å "–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ"
  if (viewAnswersButton) {
    if (currentGame.status === 'voting') {
      console.log('–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤');
      viewAnswersButton.style.display = 'block';
    } else {
      console.log('–°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤');
      viewAnswersButton.style.display = 'none';
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function checkUserAnswerStatus(gameId) {
  try {
    console.log(`–ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–≤–µ—Ç–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${currentUser.id} –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤ –∏–≥—Ä–µ ${gameId}`);
    const hasAnswered = await checkIfAnswered(gameId);
    console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞: ${hasAnswered ? '–£–∂–µ –æ—Ç–≤–µ—Ç–∏–ª' : '–ï—â–µ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª'}`);
    
    const answerButton = document.getElementById('answerButton');
    const userAnswerDisplay = document.getElementById('userAnswerDisplay');
    
    if (hasAnswered) {
      console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª, –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
      
      // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–≤–µ—Ç–∞
      if (answerButton) {
        answerButton.style.display = 'none';
      }
      
      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      updateUserAnswerDisplay();
    } else {
      console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–≤–µ—Ç–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å "—Å–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤"
      if (answerButton) {
        answerButton.style.display = currentGame.status === 'collecting_answers' ? 'block' : 'none';
      }
      
      // –°–∫—Ä—ã–≤–∞–µ–º –±–ª–æ–∫ —Å –æ—Ç–≤–µ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (userAnswerDisplay) {
        userAnswerDisplay.style.display = 'none';
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function updateUserAnswerDisplay() {
  if (!currentGame || !currentGame.id) {
    console.error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    return;
  }

  const userAnswerDisplay = document.getElementById('userAnswerDisplay');
  if (!userAnswerDisplay) {
    console.error('–ù–µ –Ω–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    return;
  }
  
  try {
    console.log(`–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${currentUser.id} –¥–ª—è –∏–≥—Ä—ã ${currentGame.id}`);
    const response = await fetch(`${API_URL}/games/${currentGame.id}/user-answer?userId=${currentUser.id}`);
    
    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${response.status}`);
    }
    
    const data = await response.json();
    console.log('–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', data);
    
    if (data && data.answer) {
      currentGame.userAnswer = data.answer;
      
      userAnswerDisplay.style.display = 'block';
      userAnswerDisplay.innerHTML = `
        <div class="user-answer-box">
          <p style="color: #2a9d8f; font-weight: bold; margin-bottom: 10px;">–í–∞—à –æ—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç!</p>
          <p style="color: #5a2d0c; font-style: italic;">"${currentGame.userAnswer}"</p>
          <p style="margin-top: 10px; color: #457b9d;">
            ${currentGame.status === 'collecting_answers' ? '–û–∂–∏–¥–∞–π—Ç–µ –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.' : 
              currentGame.status === 'voting' ? '–ò–¥–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å!' : 
              '–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!'}
          </p>
        </div>
      `;
    } else {
      console.warn('–ù–µ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      userAnswerDisplay.style.display = 'none';
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    userAnswerDisplay.style.display = 'none';
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã
function getStatusText(status) {
  switch (status) {
    case 'collecting_answers':
      return '–°–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤';
    case 'voting':
      return '–ò–¥–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ';
    case 'completed':
      return '–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞';
    default:
      return '–°—Ç–∞—Ç—É—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω';
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è (–¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–æ–º–Ω–∞—Ç—ã)
async function startVoting(gameId) {
  try {
    if (!currentGame.isCreator) {
      showNotification('–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', 'warning');
      return;
    }
    
    const response = await fetch(`${API_URL}/games/${gameId}/startVoting`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        userId: currentUser.id
      })
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ');
    }
    
    showNotification('–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞–ª–æ—Å—å!', 'success');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–º–Ω–∞—Ç—ã
    joinGameRoom(gameId);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:', error);
    showNotification(`–û—à–∏–±–∫–∞: ${error.message}`, 'error');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —ç–∫—Ä–∞–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
function showAnswerScreen(question) {
  if (!currentGame || !currentGame.id) {
    showNotification('–û—à–∏–±–∫–∞: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–µ –ø–æ—Ç–µ—Ä—è–Ω–∞', 'error');
    return;
  }

  console.log(`–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å: "${question}"`);
  
  const answerQuestionText = document.getElementById('answerQuestionText');
  if (answerQuestionText) {
    answerQuestionText.textContent = question;
  }
  
  // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º
  const answerInput = document.getElementById('answerInput');
  if (answerInput) {
    answerInput.value = '';
  }
  
  showScreen('answerScreen');
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
async function loadVotingOptions(gameId) {
  if (!gameId) {
    if (!currentGame || !currentGame.id) {
      console.error('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è');
      return;
    }
    gameId = currentGame.id;
  }
  
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –≥–æ–ª–æ—Å–æ–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const voteCheckResponse = await fetch(`${API_URL}/games/${gameId}/check-vote?userId=${currentUser.id}`);
    const voteCheckData = await voteCheckResponse.json();
    
    if (voteCheckData.hasVoted) {
      showNotification('–í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –≤ —ç—Ç–æ–π –∏–≥—Ä–µ. –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.', 'info');
      return;
    }
    
    const response = await fetch(`${API_URL}/games/${gameId}/answers?userId=${currentUser.id}`);
    
    if (!response.ok) {
      showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
      return;
    }
    
    const data = await response.json();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
    const questionText = document.getElementById('votingQuestionText');
    if (questionText) questionText.textContent = data.question;
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    const answerOptions = document.getElementById('answerOptions');
    if (answerOptions) {
      answerOptions.innerHTML = '';
      
      // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è —á–µ—Å—Ç–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
      const shuffledAnswers = [...data.answers].sort(() => Math.random() - 0.5);
      
      shuffledAnswers.forEach(answer => {
        const option = document.createElement('div');
        option.className = 'answer-option';
        option.dataset.id = answer.id;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ –∞–Ω–æ–Ω–∏–º–Ω—ã–π
        const usernameDisplay = answer.anonymous 
          ? '<div class="answer-username anonymous-user">–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</div>'
          : `<div class="answer-username">${answer.username}</div>`;
          
        option.innerHTML = `
          <div class="answer-text">${answer.text}</div>
          ${usernameDisplay}
        `;
        option.onclick = function() {
          toggleVoteSelection(this);
        };
        answerOptions.appendChild(option);
      });
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —ç–∫—Ä–∞–Ω –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    showScreen('votingScreen');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    const votingStatus = document.getElementById('votingStatus');
    if (votingStatus) {
      votingStatus.textContent = '–í—ã–±–µ—Ä–∏—Ç–µ 2 —Å–∞–º—ã—Ö —Å–º–µ—à–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞';
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.', 'error');
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏
let selectedAnswers = [];

function toggleVoteSelection(element) {
  const answerId = element.getAttribute('data-id');
  
  if (element.classList.contains('selected')) {
    // –°–Ω–∏–º–∞–µ–º –≤—ã–±–æ—Ä
    element.classList.remove('selected');
    selectedAnswers = selectedAnswers.filter(id => id !== answerId);
  } else {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–æ –Ω–µ –±–æ–ª–µ–µ 2 –æ—Ç–≤–µ—Ç–æ–≤
    if (selectedAnswers.length < 2) {
      element.classList.add('selected');
      selectedAnswers.push(answerId);
    } else {
      showNotification('–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 2 –æ—Ç–≤–µ—Ç–∞', 'warning');
      return;
    }
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
  const votingStatus = document.getElementById('votingStatus');
  if (votingStatus) {
    votingStatus.textContent = `–í—ã–±—Ä–∞–Ω–æ ${selectedAnswers.length} –∏–∑ 2 –æ—Ç–≤–µ—Ç–æ–≤`;
  }
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤
async function submitVotes() {
  if (!currentGame || !currentGame.id) {
    showNotification('–û—à–∏–±–∫–∞: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', 'error');
    return;
  }
  
  const selected = document.querySelectorAll('.answer-option.selected');
  
  if (selected.length !== 2) {
    showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–≤–Ω–æ 2 –æ—Ç–≤–µ—Ç–∞', 'warning');
    return;
  }
  
  const votedFor = Array.from(selected).map(el => el.dataset.id);
  
  try {
    const response = await fetch(`${API_URL}/games/${currentGame.id}/vote`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        userId: currentUser.id,
        votedFor: votedFor
      })
    });
    
    if (!response.ok) {
      const errorData = await response.json();
      showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏: ${errorData.error}`, 'error');
      return;
    }
    
    const result = await response.json();
    
    showNotification('–í–∞—à –≥–æ–ª–æ—Å –ø—Ä–∏–Ω—è—Ç! –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ.', 'success');
    
    // –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–∂–µ –≥–æ—Ç–æ–≤—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
    if (result.resultsReady) {
      loadResults(currentGame.id);
    } else {
      // –ò–Ω–∞—á–µ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
      const votingStatus = document.getElementById('votingStatus');
      if (votingStatus) {
        votingStatus.textContent = '–í–∞—à –≥–æ–ª–æ—Å –ø—Ä–∏–Ω—è—Ç! –û–∂–∏–¥–∞–µ–º, –ø–æ–∫–∞ –ø—Ä–æ–≥–æ–ª–æ—Å—É—é—Ç –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏...';
        votingStatus.style.color = 'var(--accent-green)';
      }
      
      // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
      const submitVotesBtn = document.getElementById('submitVotesBtn');
      if (submitVotesBtn) {
        submitVotesBtn.disabled = true;
        submitVotesBtn.style.opacity = '0.5';
      }
      
      // –û—Ç–∫–ª—é—á–∞–µ–º –≤—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
      const options = document.querySelectorAll('.answer-option');
      options.forEach(option => {
        option.onclick = null;
        option.style.cursor = 'default';
      });
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–æ–ª–æ—Å–æ–≤:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–æ–ª–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
async function loadResults(gameId) {
  if (!gameId) {
    if (!currentGame || !currentGame.id) {
      console.error('–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä–µ');
      return;
    }
    gameId = currentGame.id;
  }
  
  try {
    const response = await fetch(`${API_URL}/games/${gameId}/results`);
    
    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
    }
    
    const data = await response.json();
    
    const resultsQuestionText = document.getElementById('resultsQuestionText');
    if (resultsQuestionText) {
      resultsQuestionText.textContent = data.question;
    }
    
    const resultsList = document.getElementById('resultsList');
    if (!resultsList) {
      console.error('–≠–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    resultsList.innerHTML = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    data.results.forEach((result, index) => {
      const resultItem = document.createElement('div');
      resultItem.className = 'result-item';
      if (index === 0) resultItem.classList.add('winner');
      
      let medal = "";
      if (index === 0) medal = "ü•á";
      else if (index === 1) medal = "ü•à";
      else if (index === 2) medal = "ü•â";
      
      // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ –∞–Ω–æ–Ω–∏–º–Ω—ã–π
      const usernameDisplay = result.anonymous 
        ? '<strong>–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</strong>'
        : `<strong>${result.username}</strong>`;
      
      resultItem.innerHTML = `
        <div class="medal">${medal}</div>
        <div class="answer-text">${usernameDisplay}: ${result.text}</div>
        <div class="vote-count">${result.votes} –≥–æ–ª–æ—Å(–æ–≤)</div>
      `;
      
      resultsList.appendChild(resultItem);
    });
    
    showScreen('resultsScreen');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:', error);
    showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
  }
}

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
let statusCheckInterval = null;

function startStatusCheck() {
  if (statusCheckInterval) {
    clearInterval(statusCheckInterval);
  }
  
  // –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
  if (currentGame && currentGame.id) {
    checkGameStatus();
  }
  
  // –ó–∞—Ç–µ–º –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
  statusCheckInterval = setInterval(() => {
    if (currentGame && currentGame.id) {
      checkGameStatus();
    } else {
      // –ï—Å–ª–∏ –±–æ–ª—å—à–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
      clearInterval(statusCheckInterval);
      statusCheckInterval = null;
    }
  }, 5000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
  
  console.log('–ó–∞–ø—É—â–µ–Ω–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã');
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã
async function checkGameStatus() {
  if (!currentGame || !currentGame.id) {
    console.error('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞');
    return;
  }
  
  try {
    const response = await fetch(`${API_URL}/games/${currentGame.id}?_=${Date.now()}`);
    
    if (!response.ok) {
      console.warn(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã: ${response.status} ${response.statusText}`);
      return;
    }
    
    const gameData = await response.json();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å
    const statusChanged = gameData.status !== currentGame.status;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
    currentGame.status = gameData.status;
    
    console.log(`–°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã ${currentGame.id}: ${gameData.status}, –∏–∑–º–µ–Ω–∏–ª—Å—è: ${statusChanged}`);
    
    // –†–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    if (statusChanged) {
      if (gameData.status === 'voting') {
        showNotification('–ù–∞—á–∞–ª–æ—Å—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –ª—É—á—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤.', 'info');
        loadVotingOptions(currentGame.id);
      } else if (gameData.status === 'results') {
        showNotification('–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º.', 'success');
        loadResults(currentGame.id);
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã:', error);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    if (!navigator.onLine) {
      showNotification('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.', 'error');
    }
  }
}

// –î–æ–±–∞–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±—ã–ª–æ –ª–∏ —É–∂–µ –æ—Ç–≤–µ—á–µ–Ω–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å
async function checkIfAnswered(gameId) {
  try {
    const response = await fetch(`${API_URL}/games/${gameId}/check-answer?userId=${currentUser.id}`);
    
    if (!response.ok) {
      return false;
    }
    
    const data = await response.json();
    return data.hasAnswered;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ—Ç–≤–µ—Ç–∞:', error);
    return false;
  }
}

// –î–æ–±–∞–≤–∏–º —Ç–∞–∫–∂–µ —É–ª—É—á—à–µ–Ω–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è startRoomUpdates
function startRoomUpdates(gameId) {
  console.log(`–ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–æ–º–Ω–∞—Ç—ã ${gameId}`);
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç—É—Å–∞
  startStatusCheck();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä–µ ID
  if (!gameId && currentGame && currentGame.id) {
    gameId = currentGame.id;
  }
  
  if (!gameId) {
    console.error('–ù–µ—Ç ID –∏–≥—Ä—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–º–Ω–∞—Ç—ã');
    return;
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–Ω–∞—Ç–µ
  setTimeout(() => {
    checkIfAnswered(gameId).then(hasAnswered => {
      console.log(`–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${hasAnswered ? '–£–∂–µ –æ—Ç–≤–µ—Ç–∏–ª' : '–ï—â–µ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª'}`);
      
      const answerButton = document.getElementById('answerButton');
      const userAnswerDisplay = document.getElementById('userAnswerDisplay');
      
      if (answerButton && userAnswerDisplay) {
        if (hasAnswered) {
          console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª, —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–≤–µ—Ç–∞');
          answerButton.style.display = 'none';
          
          // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          fetch(`${API_URL}/games/${gameId}/user-answer?userId=${currentUser.id}`)
            .then(response => response.json())
            .then(data => {
              console.log('–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', data.answer);
              currentGame.userAnswer = data.answer;
              
              userAnswerDisplay.style.display = 'block';
              userAnswerDisplay.innerHTML = `
                <div class="user-answer-box">
                  <p style="color: #2a9d8f; font-weight: bold; margin-bottom: 10px;">–í–∞—à –æ—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç!</p>
                  <p style="color: #5a2d0c; font-style: italic;">"${currentGame.userAnswer}"</p>
                  <p style="margin-top: 10px; color: #457b9d;">–û–∂–∏–¥–∞–π—Ç–µ –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.</p>
                </div>
              `;
            })
            .catch(error => {
              console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            });
        } else {
          console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–≤–µ—Ç–∞');
          if (currentGame && currentGame.status === 'collecting_answers') {
            answerButton.style.display = 'block';
          } else {
            answerButton.style.display = 'none';
          }
          userAnswerDisplay.style.display = 'none';
        }
      }
    });
  }, 1000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã –Ω–∞–ø—Ä—è–º—É—é
async function testCreateGame() {
  console.log("–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã...");
  
  if (!currentUser || !currentUser.id || !currentUser.name) {
    console.error("–ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É –±–µ–∑ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    showNotification("–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –∏–º—è", "error");
    return false;
  }
  
  try {
    const testQuestion = "–¢–µ—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã";
    console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã —Å –≤–æ–ø—Ä–æ—Å–æ–º: ${testQuestion}`);
    
    const response = await fetch(`${API_URL}/games`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        question: testQuestion,
        userId: currentUser.id,
        userName: currentUser.name
      })
    });
    
    if (!response.ok) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–æ–≤–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã, —Å—Ç–∞—Ç—É—Å: ${response.status}`);
      const errorText = await response.text();
      console.error('–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏:', errorText);
      showNotification(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –∏–≥—Ä—ã: ${response.status}`, "error");
      return false;
    }
    
    const result = await response.json();
    console.log("–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç:", result);
    showNotification(`–¢–µ—Å—Ç–æ–≤–∞—è –∏–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞! ID: ${result.gameId}`, "success");
    return true;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã:", error);
    showNotification(`–û—à–∏–±–∫–∞: ${error.message}`, "error");
    return false;
  }
}