// –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API
const API_URL = window.location.origin + '/api';

console.log("papyrus.js –∑–∞–≥—Ä—É–∂–µ–Ω");

// –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Telegram WebApp
// –ï—Å–ª–∏ –º—ã –≤–Ω—É—Ç—Ä–∏ Telegram WebApp, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –æ–±—ä–µ–∫—Ç, –∏–Ω–∞—á–µ —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
if (!window.Telegram || !window.Telegram.WebApp) {
  console.log("Telegram WebApp –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è");
  window.Telegram = {
    WebApp: {
  initDataUnsafe: {
    user: {
          id: Math.floor(Math.random() * 1000000),
          first_name: '',
          username: '',
        }
      },
      BackButton: {
        show: function() { console.log('BackButton.show –≤—ã–∑–≤–∞–Ω'); },
        hide: function() { console.log('BackButton.hide –≤—ã–∑–≤–∞–Ω'); },
        onClick: function(callback) { console.log('BackButton.onClick –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω'); },
        offClick: function(callback) { console.log('BackButton.offClick –≤—ã–∑–≤–∞–Ω'); },
        isVisible: false
      },
      ready: function() { console.log('WebApp.ready –≤—ã–∑–≤–∞–Ω'); },
      expand: function() { console.log('WebApp.expand –≤—ã–∑–≤–∞–Ω'); },
      close: function() { console.log('WebApp.close –≤—ã–∑–≤–∞–Ω'); },
      isExpanded: true,
      HapticFeedback: {
        impactOccurred: function(style) { console.log('HapticFeedback.impactOccurred –≤—ã–∑–≤–∞–Ω —Å', style); }
      }
    }
  };
} else {
  console.log("Telegram WebApp –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏");
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentUser = {
  id: getTelegramUserId(),
  name: '',
  anonymous: false
};
let currentGame = null;
let navigationHistory = []; // –ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
let keyboardVisible = false; // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getTelegramUserId() {
  if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initDataUnsafe && window.Telegram.WebApp.initDataUnsafe.user) {
    return window.Telegram.WebApp.initDataUnsafe.user.id || Math.floor(Math.random() * 1000000);
  }
  return Math.floor(Math.random() * 1000000);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
function getTelegramUserName() {
  if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initDataUnsafe && window.Telegram.WebApp.initDataUnsafe.user) {
    const user = window.Telegram.WebApp.initDataUnsafe.user;
    if (user.username) return user.username;
    if (user.first_name) {
      if (user.last_name) return `${user.first_name} ${user.last_name}`;
      return user.first_name;
    }
  }
  return '';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫—Ä–∞—Å–∏–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'info') {
  // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const notification = document.createElement('div');
  notification.className = `papyrus-notification ${type}`;
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  let icon = 'üìú';
  if (type === 'success') icon = '‚úÖ';
  else if (type === 'error') icon = '‚ùå';
  else if (type === 'warning') icon = '‚ö†Ô∏è';
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
  notification.innerHTML = `
    <div class="notification-icon">${icon}</div>
    <div class="notification-message">${message}</div>
    <div class="notification-close" onclick="this.parentNode.remove()">√ó</div>
  `;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
  document.body.appendChild(notification);
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
  setTimeout(() => {
    notification.style.transform = 'translateX(0)';
    notification.style.opacity = '1';
  }, 10);
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
  setTimeout(() => {
    notification.style.transform = 'translateX(400px)';
    notification.style.opacity = '0';
    setTimeout(() => notification.remove(), 500);
  }, 5000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –∫–∞–∫–æ–π-–ª–∏–±–æ —ç–ª–µ–º–µ–Ω—Ç –≤–≤–æ–¥–∞
function isInputActive() {
  const activeElement = document.activeElement;
  return activeElement && (
    activeElement.tagName === 'INPUT' || 
    activeElement.tagName === 'TEXTAREA' ||
    activeElement.isContentEditable
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
function hideKeyboard() {
  if (!isInputActive()) return false;
  
  document.activeElement.blur();
  return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —ç–∫—Ä–∞–Ω–æ–≤ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –∏—Å—Ç–æ—Ä–∏–∏
function showScreen(screenId) {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω
  let currentScreenId = null;
  const screens = [
    'startScreen', 'nameScreen', 'gameScreen', 'questionScreen',
    'answerScreen', 'votingScreen', 'resultsScreen'
  ];
  
  for (const id of screens) {
    const screen = document.getElementById(id);
    if (screen && screen.style.display === 'block') {
      currentScreenId = id;
      break;
    }
  }
  
  console.log(`–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω: ${screenId} (–ø—Ä–µ–¥—ã–¥—É—â–∏–π: ${currentScreenId})`);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –Ω–æ–≤—ã–π —ç–∫—Ä–∞–Ω
  if (currentScreenId && currentScreenId !== screenId) {
    navigationHistory.push(currentScreenId);
    console.log(`–ò—Å—Ç–æ—Ä–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: ${navigationHistory.join(' -> ')}`);
  }
  
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —ç–∫—Ä–∞–Ω—ã
  screens.forEach(id => {
    const screen = document.getElementById(id);
    if (screen) {
      screen.style.display = 'none';
    }
  });
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —ç–∫—Ä–∞–Ω
  const screenToShow = document.getElementById(screenId);
  if (screenToShow) {
    screenToShow.style.display = 'block';
    
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥" –≤ Telegram
    if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.BackButton) {
      if (navigationHistory.length > 0 && screenId !== 'startScreen') {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥, –µ—Å–ª–∏ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è –∏ –Ω–µ –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
        window.Telegram.WebApp.BackButton.show();
      } else {
        // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥ –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
        window.Telegram.WebApp.BackButton.hide();
      }
    }
    
    // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
    if (screenId === 'nameScreen') {
const nameInput = document.getElementById('nameInput');
      if (nameInput) nameInput.focus();
    } else if (screenId === 'questionScreen') {
const questionInput = document.getElementById('questionInput');
      if (questionInput) questionInput.focus();
    } else if (screenId === 'answerScreen') {
const answerInput = document.getElementById('answerInput');
      if (answerInput) answerInput.focus();
    }
  } else {
    console.error(`–≠–∫—Ä–∞–Ω ${screenId} –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥
function goBack() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω—É–∂–Ω–æ –ª–∏ —Å–Ω–∞—á–∞–ª–∞ —Å–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
  if (hideKeyboard()) {
    console.log('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã—Ç–∞');
    keyboardVisible = false;
    return; // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è, –µ—Å–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—ã–ª–∞ —Å–∫—Ä—ã—Ç–∞
  }

  if (navigationHistory.length > 0) {
    const previousScreen = navigationHistory.pop();
    console.log(`–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —ç–∫—Ä–∞–Ω—É: ${previousScreen}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω –±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    const screens = [
      'startScreen', 'nameScreen', 'gameScreen', 'questionScreen',
      'answerScreen', 'votingScreen', 'resultsScreen'
    ];
    
    screens.forEach(id => {
      const screen = document.getElementById(id);
      if (screen) {
        screen.style.display = id === previousScreen ? 'block' : 'none';
      }
    });
    
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥" –≤ Telegram
    if (window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.BackButton) {
      if (navigationHistory.length > 0 && previousScreen !== 'startScreen') {
        window.Telegram.WebApp.BackButton.show();
      } else {
        window.Telegram.WebApp.BackButton.hide();
      }
    }
  } else {
    // –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω
    showScreen('startScreen');
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
window.startApp = function() {
  console.log("–í—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è startApp()");
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebApp
  if (window.Telegram && window.Telegram.WebApp) {
    window.Telegram.WebApp.ready();
    window.Telegram.WebApp.expand();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–∂–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ DOMContentLoaded, –Ω–µ –¥—É–±–ª–∏—Ä—É–µ–º –µ–≥–æ –∑–¥–µ—Å—å
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–º–µ–Ω–∞ –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ Telegram
  const telegramName = getTelegramUserName();
  const savedNames = getSavedNames();
  
  if (savedNames.length > 0) {
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–º–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞
    showScreen('nameScreen');
    showNameChoiceOptions();
  } else if (telegramName) {
    // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–º—è –∏–∑ Telegram, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
    showScreen('nameScreen');
    showTelegramNameOption();
  } else {
    // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω, –Ω–∏ –¥–∞–Ω–Ω—ã—Ö Telegram, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏
    showScreen('nameScreen');
    showNewNameForm();
  }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
document.addEventListener('focusin', function(e) {
  if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {
    console.log('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
    keyboardVisible = true;
    document.body.classList.add('keyboard-open');
  }
});

document.addEventListener('focusout', function(e) {
  if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') {
    // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setTimeout(() => {
      if (!isInputActive()) {
        console.log('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã—Ç–∞');
        keyboardVisible = false;
        document.body.classList.remove('keyboard-open');
      }
    }, 100);
  }
});

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–π –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –Ω–∞ Android
window.addEventListener('popstate', function(e) {
  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–∞
  if (keyboardVisible) {
    e.preventDefault();
    hideKeyboard();
  } else {
    goBack();
  }
});

// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π "back" Telegram WebApp
document.addEventListener('DOMContentLoaded', function() {
  // –î–æ–±–∞–≤–ª—è–µ–º history state, —á—Ç–æ–±—ã —Å—Ä–∞–±–æ—Ç–∞–ª popstate
  history.pushState({page: 1}, "–ü–∞–ø–∞ –¢—Ä—É–±–æ–∫", null);
  
  // –î–ª—è Telegram WebApp —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
  if (window.Telegram && window.Telegram.WebApp) {
    // –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω, –≤–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è
    if (typeof window.Telegram.WebApp.enableClosingConfirmation === 'function') {
      window.Telegram.WebApp.enableClosingConfirmation();
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" Telegram
    if (window.Telegram.WebApp.BackButton) {
      window.Telegram.WebApp.BackButton.onClick(function() {
        goBack();
      });
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  setupAnonymousRegistration();
});

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
function setupAnonymousRegistration() {
  const newNameSection = document.getElementById('newNameSection');
  if (newNameSection) {
    // –î–æ–±–∞–≤–ª—è–µ–º —á–µ–∫–±–æ–∫—Å –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const anonymousCheckbox = document.createElement('div');
    anonymousCheckbox.className = 'anonymous-checkbox';
    anonymousCheckbox.innerHTML = `
      <label for="anonymousCheck">
        <input type="checkbox" id="anonymousCheck"> 
        –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ (–¥—Ä—É–≥–∏–µ –∏–≥—Ä–æ–∫–∏ –Ω–µ —É–≤–∏–¥—è—Ç –≤–∞—à–µ –∏–º—è)
      </label>
    `;
    newNameSection.appendChild(anonymousCheckbox);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —á–µ–∫–±–æ–∫—Å–∞
    const checkbox = document.getElementById('anonymousCheck');
    if (checkbox) {
      checkbox.addEventListener('change', function(e) {
        currentUser.anonymous = e.target.checked;
      });
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–º–µ–Ω–∏ –∏–∑ Telegram
function showTelegramNameOption() {
  const telegramName = getTelegramUserName();
  
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
  const sections = ['newNameSection', 'existingNameSection'];
  sections.forEach(id => {
    const section = document.getElementById(id);
    if (section) section.style.display = 'none';
  });
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
  const choiceButtons = document.getElementById('nameChoiceButtons');
  if (choiceButtons) {
    // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è –∫–Ω–æ–ø–æ–∫
    choiceButtons.innerHTML = `
      <button id="useTelegramNameBtn" class="papyrus-button shimmer">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º—è –∏–∑ Telegram: ${telegramName}</button>
      <button id="newNameBtn" class="papyrus-button shimmer">–ü—Ä–∏–¥—É–º–∞—Ç—å –¥—Ä—É–≥–æ–µ –∏–º—è</button>
      <button id="existingNameBtn" class="papyrus-button shimmer ${getSavedNames().length ? '' : 'disabled'}" ${getSavedNames().length ? '' : 'disabled'}>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ –∏–º—è</button>
    `;
    choiceButtons.style.display = 'block';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    document.getElementById('useTelegramNameBtn').addEventListener('click', function() {
      currentUser.name = telegramName;
      currentUser.anonymous = false; // –ò–º—è –∏–∑ Telegram –Ω–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ
      showScreen('gameScreen');
      showNotification(`–ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è: ${telegramName}`, 'success');
      loadGames();
    });
    
    document.getElementById('newNameBtn').addEventListener('click', showNewNameForm);
    
    const existingNameBtn = document.getElementById('existingNameBtn');
    existingNameBtn.addEventListener('click', showExistingNames);
    
    // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω
    if (getSavedNames().length === 0) {
      existingNameBtn.classList.add('disabled');
      existingNameBtn.style.opacity = '0.5';
      existingNameBtn.title = '–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω';
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø—Ü–∏–π –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏
function showNameChoiceOptions() {
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
  const sections = ['newNameSection', 'existingNameSection'];
  sections.forEach(id => {
    const section = document.getElementById(id);
    if (section) section.style.display = 'none';
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–º—è –∏–∑ Telegram
  const telegramName = getTelegramUserName();
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
  const choiceButtons = document.getElementById('nameChoiceButtons');
  if (choiceButtons) {
    // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è –∫–Ω–æ–ø–æ–∫, –≤–∫–ª—é—á–∞—è –æ–ø—Ü–∏—é –∏–º–µ–Ω–∏ –∏–∑ Telegram, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
    let buttonHtml = '';
    
    if (telegramName) {
      buttonHtml += `<button id="useTelegramNameBtn" class="papyrus-button shimmer">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º—è –∏–∑ Telegram: ${telegramName}</button>`;
    }
    
    buttonHtml += `
      <button id="newNameBtn" class="papyrus-button shimmer">–ù–æ–≤–æ–µ –∏–º—è</button>
      <button id="existingNameBtn" class="papyrus-button shimmer">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ –∏–º—è</button>
    `;
    
    choiceButtons.innerHTML = buttonHtml;
    choiceButtons.style.display = 'block';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    if (telegramName) {
      document.getElementById('useTelegramNameBtn').addEventListener('click', function() {
        currentUser.name = telegramName;
        currentUser.anonymous = false; // –ò–º—è –∏–∑ Telegram –Ω–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ
        showScreen('gameScreen');
        showNotification(`–ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è: ${telegramName}`, 'success');
        loadGames();
      });
    }
    
    document.getElementById('newNameBtn').addEventListener('click', showNewNameForm);
    document.getElementById('existingNameBtn').addEventListener('click', showExistingNames);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–º–µ–Ω–∞
  const savedNames = getSavedNames();
  const existingNameBtn = document.getElementById('existingNameBtn');
  if (existingNameBtn) {
    // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω
    if (savedNames.length === 0) {
      existingNameBtn.classList.add('disabled');
      existingNameBtn.style.opacity = '0.5';
      existingNameBtn.title = '–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω';
    } else {
      existingNameBtn.classList.remove('disabled');
      existingNameBtn.style.opacity = '1';
      existingNameBtn.title = '';
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ñ–æ—Ä–º—ã –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏
function showNewNameForm() {
  // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
  const choiceButtons = document.getElementById('nameChoiceButtons');
  if (choiceButtons) choiceButtons.style.display = 'none';
  
  // –°–∫—Ä—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–º–µ–Ω
  const existingNameSection = document.getElementById('existingNameSection');
  if (existingNameSection) existingNameSection.style.display = 'none';
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏
  const newNameSection = document.getElementById('newNameSection');
  if (newNameSection) newNameSection.style.display = 'block';
  
  // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
  const nameInput = document.getElementById('nameInput');
  if (nameInput) nameInput.focus();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω
function showExistingNames() {
  // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–º–µ–Ω–∞
  const savedNames = getSavedNames();
  if (savedNames.length === 0) {
    showNotification('–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è.', 'info');
    showNewNameForm();
    return;
  }
  
  // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
  const choiceButtons = document.getElementById('nameChoiceButtons');
  if (choiceButtons) choiceButtons.style.display = 'none';
  
  // –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏
  const newNameSection = document.getElementById('newNameSection');
  if (newNameSection) newNameSection.style.display = 'none';
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
  const existingNameSection = document.getElementById('existingNameSection');
  if (existingNameSection) existingNameSection.style.display = 'block';
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω
  const savedNamesList = document.getElementById('savedNamesList');
  if (savedNamesList) {
    let html = '';
    savedNames.forEach((nameData) => {
      html += `
        <div class="game-item">
          <h3>${nameData.name} ${nameData.anonymous ? '(–∞–Ω–æ–Ω–∏–º–Ω–æ)' : ''}</h3>
          <div class="button-group">
            <button class="papyrus-button shimmer" onclick="selectExistingName('${nameData.name}', ${nameData.anonymous})">–í—ã–±—Ä–∞—Ç—å</button>
            <button class="papyrus-button shimmer" onclick="deleteExistingName('${nameData.name}')">–£–¥–∞–ª–∏—Ç—å</button>
          </div>
        </div>
      `;
    });
    savedNamesList.innerHTML = html;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–º–µ–Ω–∏
function selectExistingName(name, anonymous = false) {
  console.log(`–í—ã–±—Ä–∞–Ω–æ –∏–º—è: ${name}, –∞–Ω–æ–Ω–∏–º–Ω–æ: ${anonymous}`);
  currentUser.name = name;
  currentUser.anonymous = anonymous;
  showScreen('gameScreen');
  showNotification(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${name}!`, 'success');
  
  // –†–µ–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä —Å —Å–µ—Ä–≤–µ—Ä–∞
  loadGames();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–º–µ–Ω–∏
function deleteExistingName(name) {
  const savedNames = getSavedNames();
  const updatedNames = savedNames.filter(nameData => nameData.name !== name);
  saveNamesToStorage(updatedNames);
  
  showNotification(`–ò–º—è ${name} —É–¥–∞–ª–µ–Ω–æ`, 'success');
  
  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω
  showExistingNames();
  
  // –ï—Å–ª–∏ –±–æ–ª—å—à–µ –Ω–µ—Ç –∏–º–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –Ω–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏
  if (updatedNames.length === 0) {
    showNewNameForm();
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω –∏–∑ localStorage –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getSavedNames() {
  // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
  const userId = getTelegramUserId();
  const storageKey = `papaTrubokSavedNames_${userId}`;
  
  let savedNames = localStorage.getItem(storageKey);
  
  if (savedNames) {
    try {
      savedNames = JSON.parse(savedNames);
      if (Array.isArray(savedNames)) {
        return savedNames;
      }
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω:', e);
    }
  }
  
  return [];
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–º–µ–Ω –≤ localStorage –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function saveNamesToStorage(names) {
  // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
  const userId = getTelegramUserId();
  const storageKey = `papaTrubokSavedNames_${userId}`;
  
  if (Array.isArray(names)) {
    localStorage.setItem(storageKey, JSON.stringify(names));
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function saveName() {
  const nameInput = document.getElementById('nameInput');
  if (!nameInput) {
    console.error('–≠–ª–µ–º–µ–Ω—Ç –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.', 'error');
    return;
  }
  
  const name = nameInput.value.trim();
  if (name.length < 3) {
    showNotification('–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞', 'warning');
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–∫–±–æ–∫—Å–∞ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏
  const anonymousCheck = document.getElementById('anonymousCheck');
  const anonymous = anonymousCheck ? anonymousCheck.checked : false;
  
  console.log(`–°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è: ${name}, –∞–Ω–æ–Ω–∏–º–Ω–æ: ${anonymous}`);
  currentUser.name = name;
  currentUser.anonymous = anonymous;
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
  const savedNames = getSavedNames();
  const existingNameIndex = savedNames.findIndex(nameData => nameData.name === name);
  
  if (existingNameIndex !== -1) {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∏–º—è
    savedNames[existingNameIndex].anonymous = anonymous;
  } else {
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∏–º—è
    savedNames.push({ name, anonymous });
  }
  
  saveNamesToStorage(savedNames);
  
  showScreen('gameScreen');
  showNotification(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${name}!`, 'success');
  
  // –†–µ–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä —Å —Å–µ—Ä–≤–µ—Ä–∞
  loadGames();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä
async function loadGames() {
  const gamesList = document.getElementById('gamesList');
  if (!gamesList) return;
  
  try {
    gamesList.innerHTML = '<p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä...</p>';
    
    const response = await fetch(`${API_URL}/games`);
    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
    }
    
    const games = await response.json();
    
    if (games.length === 0) {
      gamesList.innerHTML = '<p>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é!</p>';
      return;
    }
    
    let html = '';
    games.forEach(game => {
      html += `
        <div class="game-item">
        <h3>–ö–æ–º–Ω–∞—Ç–∞: ${game.name}</h3>
        <p>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${game.count}/10</p>
        <p>–°—Ç–∞—Ç—É—Å: ${getStatusText(game.status)}</p>
        <button class="papyrus-button shimmer" onclick="joinGame('${game.id}')">–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è</button>
        </div>
      `;
    });
    
    gamesList.innerHTML = html;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä:', error);
    gamesList.innerHTML = '<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–≥—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>';
  }
}

// –ü–µ—Ä–µ–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç
function getStatusText(status) {
  switch(status) {
    case 'waiting_players': return '–û–∂–∏–¥–∞–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤';
    case 'collecting_answers': return '–°–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤';
    case 'voting': return '–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ';
    case 'results': return '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã';
    default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å';
  }
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã
function createNewGame() {
  console.log("–í—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è createNewGame()");
  showScreen('questionScreen');
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã
async function saveQuestion() {
  const questionInput = document.getElementById('questionInput');
  if (!questionInput) {
    console.error('–≠–ª–µ–º–µ–Ω—Ç –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.', 'error');
    return;
  }
  
  const question = questionInput.value.trim();
  if (question.length < 5) {
    showNotification('–í–æ–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 5 —Å–∏–º–≤–æ–ª–æ–≤', 'warning');
    return;
  }
  
  try {
    const response = await fetch(`${API_URL}/games`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        userId: currentUser.id,
        userName: currentUser.name,
        question: question
      })
    });
    
    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
    }
    
    const data = await response.json();
    
    if (data.status === 'success') {
      currentGame = {
        id: data.gameId,
        isCreator: true,
        question: question,
        status: 'waiting_players'
      };
      
      showNotification('–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.', 'success');
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å
      showAnswerScreen(question);
    } else {
      showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã: ' + (data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'), 'error');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≥—Ä—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —ç–∫—Ä–∞–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
function showAnswerScreen(question) {
  const answerQuestionText = document.getElementById('answerQuestionText');
  if (answerQuestionText) {
    answerQuestionText.textContent = question;
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏
  updateAnonymousStatus();
  
  showScreen('answerScreen');
}

// –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏
function updateAnonymousStatus() {
  const anonymousStatus = document.getElementById('anonymousStatus');
  if (anonymousStatus) {
    if (currentUser.anonymous) {
      anonymousStatus.textContent = '–í–∞—à –æ—Ç–≤–µ—Ç –±—É–¥–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω—ã–º';
      anonymousStatus.className = 'anonymous';
    } else {
      anonymousStatus.textContent = '–£—á–∞—Å—Ç–Ω–∏–∫–∏ –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å –≤–∞—à–µ –∏–º—è';
      anonymousStatus.className = '';
    }
  }
}

// –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∏–≥—Ä–µ
async function joinGame(gameId) {
  if (!currentUser.name) {
    showNotification('–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –∏–º—è!', 'warning');
    showScreen('nameScreen');
    return;
  }
  
  try {
    const response = await fetch(`${API_URL}/games/${gameId}/join`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        userId: currentUser.id,
        userName: currentUser.name,
        anonymous: currentUser.anonymous
      })
    });
    
    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
    }
    
    const data = await response.json();
    
      currentGame = {
        id: gameId,
        isCreator: false,
      question: data.question,
      status: data.status || 'waiting_players'
      };
    
    console.log(`–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ, —Å—Ç–∞—Ç—É—Å: ${currentGame.status}, –≤–æ–ø—Ä–æ—Å: ${currentGame.question ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'}`);
      
      if (data.question) {
      if (currentGame.status === 'collecting_answers' || currentGame.status === 'waiting_players') {
        showAnswerScreen(data.question);
      } else if (currentGame.status === 'voting') {
        showNotification('–í —ç—Ç–æ–π –∏–≥—Ä–µ —É–∂–µ –∏–¥–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ!', 'info');
        loadVotingOptions();
      } else if (currentGame.status === 'results') {
        showNotification('–≠—Ç–∞ –∏–≥—Ä–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.', 'info');
        loadResults();
      }
    } else {
      showNotification('–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ! –û–∂–∏–¥–∞–π—Ç–µ, –ø–æ–∫–∞ —Å–æ–∑–¥–∞—Ç–µ–ª—å –≤—ã–±–µ—Ä–µ—Ç –≤–æ–ø—Ä–æ—Å.', 'success');
      showScreen('gameScreen');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∏–≥—Ä–µ:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –∫ –∏–≥—Ä–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
async function submitAnswer() {
  if (!currentGame || !currentGame.id) {
    showNotification('–û—à–∏–±–∫–∞: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', 'error');
    return;
  }
  
  const answerInput = document.getElementById('answerInput');
  if (!answerInput) {
    console.error('–≠–ª–µ–º–µ–Ω—Ç –≤–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.', 'error');
    return;
  }
  
  const answer = answerInput.value.trim();
  if (answer.length < 1) {
    showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç', 'warning');
    return;
  }
  
  try {
    const response = await fetch(`${API_URL}/games/${currentGame.id}/answer`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        userId: currentUser.id,
        answer: answer,
        anonymous: currentUser.anonymous
      })
    });
    
    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
    }
    
    const data = await response.json();
    
    showNotification(`–í–∞—à –æ—Ç–≤–µ—Ç –ø—Ä–∏–Ω—è—Ç! –û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–æ–≤ –¥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: ${data.remainingToVoting}`, 'success');
      
    // –ï—Å–ª–∏ —ç—Ç–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–º—É –¥–æ–ø. –æ–ø—Ü–∏–∏
    if (currentGame.isCreator) {
      showCreatorOptions(data.answersCount);
    } else {
      showScreen('gameScreen');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
  }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª—è, –µ—Å–ª–∏ >=3 –æ—Ç–≤–µ—Ç–æ–≤, –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
function showCreatorOptions(answersCount) {
  const gamesList = document.getElementById('gamesList');
  if (gamesList && currentGame) {
    showScreen('gameScreen');
    let votingBtn = '';
    if (answersCount >= 3) {
      votingBtn = `<button class="papyrus-button shimmer" onclick="startVoting()">–ù–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ</button>`;
    }
    gamesList.innerHTML = `
      <div class="creator-options">
        <h2>–í—ã —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã</h2>
        <p>–í–æ–ø—Ä–æ—Å: "${currentGame.question}"</p>
        ${votingBtn}
        <button class="papyrus-button shimmer" onclick="loadGames()">–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –∏–≥—Ä</button>
      </div>
    `;
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
async function loadVotingOptions() {
  if (!currentGame || !currentGame.id) {
    console.error('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è');
    return;
  }
  
  try {
    const response = await fetch(`${API_URL}/games/${currentGame.id}/answers?userId=${currentUser.id}`);
    
    if (!response.ok) {
      showNotification('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', 'error');
      return;
    }
    
    const data = await response.json();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞
    const questionText = document.getElementById('votingQuestionText');
    if (questionText) questionText.textContent = data.question;
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
    const answerOptions = document.getElementById('answerOptions');
    if (answerOptions) {
      answerOptions.innerHTML = '';
      
      // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è —á–µ—Å—Ç–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
      const shuffledAnswers = [...data.answers].sort(() => Math.random() - 0.5);
      
      shuffledAnswers.forEach(answer => {
        const option = document.createElement('div');
        option.className = 'answer-option';
        option.dataset.id = answer.id;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ –∞–Ω–æ–Ω–∏–º–Ω—ã–π
        const usernameDisplay = answer.anonymous 
          ? '<div class="answer-username anonymous-user">–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</div>'
          : `<div class="answer-username">${answer.username}</div>`;
          
        option.innerHTML = `
          <div class="answer-text">${answer.text}</div>
          ${usernameDisplay}
        `;
        option.onclick = function() {
          toggleVoteSelection(this);
        };
        answerOptions.appendChild(option);
      });
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —ç–∫—Ä–∞–Ω –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    showScreen('votingScreen');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    const votingStatus = document.getElementById('votingStatus');
    if (votingStatus) {
      votingStatus.textContent = '–í—ã–±–µ—Ä–∏—Ç–µ 2 —Å–∞–º—ã—Ö —Å–º–µ—à–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞';
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.', 'error');
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏
let selectedAnswers = [];

function toggleVoteSelection(element) {
  const answerId = element.getAttribute('data-id');
  
  if (element.classList.contains('selected')) {
    // –°–Ω–∏–º–∞–µ–º –≤—ã–±–æ—Ä
    element.classList.remove('selected');
    selectedAnswers = selectedAnswers.filter(id => id !== answerId);
  } else {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–æ –Ω–µ –±–æ–ª–µ–µ 2 –æ—Ç–≤–µ—Ç–æ–≤
    if (selectedAnswers.length < 2) {
      element.classList.add('selected');
      selectedAnswers.push(answerId);
    } else {
      showNotification('–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –º–∞–∫—Å–∏–º—É–º 2 –æ—Ç–≤–µ—Ç–∞', 'warning');
      return;
    }
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
  const votingStatus = document.getElementById('votingStatus');
  if (votingStatus) {
    votingStatus.textContent = `–í—ã–±—Ä–∞–Ω–æ ${selectedAnswers.length} –∏–∑ 2 –æ—Ç–≤–µ—Ç–æ–≤`;
  }
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤
async function submitVotes() {
  const selected = document.querySelectorAll('.answer-option.selected');
  
  if (selected.length !== 2) {
    showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–≤–Ω–æ 2 –æ—Ç–≤–µ—Ç–∞', 'warning');
    return;
  }
  
  const votedFor = Array.from(selected).map(el => el.dataset.id);
  
  try {
    const response = await fetch(`${API_URL}/games/${currentGame.id}/vote`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        userId: currentUser.id,
        votedFor: votedFor
      })
    });
    
    if (!response.ok) {
      const error = await response.json();
      showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏: ${error.error}`, 'error');
      return;
    }
    
    const result = await response.json();
    
    showNotification('–í–∞—à –≥–æ–ª–æ—Å –ø—Ä–∏–Ω—è—Ç! –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ.', 'success');
    
    // –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–∂–µ –≥–æ—Ç–æ–≤—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
    if (result.resultsReady) {
        loadResults();
      } else {
      // –ò–Ω–∞—á–µ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
      const votingStatus = document.getElementById('votingStatus');
      if (votingStatus) {
        votingStatus.textContent = '–í–∞—à –≥–æ–ª–æ—Å –ø—Ä–∏–Ω—è—Ç! –û–∂–∏–¥–∞–µ–º, –ø–æ–∫–∞ –ø—Ä–æ–≥–æ–ª–æ—Å—É—é—Ç –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏...';
        votingStatus.style.color = 'var(--accent-green)';
      }
      
      // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
      const submitVotesBtn = document.getElementById('submitVotesBtn');
      if (submitVotesBtn) {
        submitVotesBtn.disabled = true;
        submitVotesBtn.style.opacity = '0.5';
      }
      
      // –û—Ç–∫–ª—é—á–∞–µ–º –≤—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
      const options = document.querySelectorAll('.answer-option');
      options.forEach(option => {
        option.onclick = null;
        option.style.cursor = 'default';
      });
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–æ–ª–æ—Å–æ–≤:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥–æ–ª–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
  }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
async function loadResults() {
  if (!currentGame || !currentGame.id) {
    console.error('–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä–µ');
    return;
  }
  
  try {
    const response = await fetch(`${API_URL}/games/${currentGame.id}/results`);
    
    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
    }
    
    const data = await response.json();
    
    const resultsQuestionText = document.getElementById('resultsQuestionText');
    if (resultsQuestionText) {
      resultsQuestionText.textContent = data.question;
    }
    
    const resultsList = document.getElementById('resultsList');
    if (!resultsList) {
      console.error('–≠–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    resultsList.innerHTML = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    data.results.forEach((result, index) => {
      const resultItem = document.createElement('div');
      resultItem.className = 'result-item';
      if (index === 0) resultItem.classList.add('winner');
      
      let medal = "";
      if (index === 0) medal = "ü•á";
      else if (index === 1) medal = "ü•à";
      else if (index === 2) medal = "ü•â";
      
      // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ –∞–Ω–æ–Ω–∏–º–Ω—ã–π
      const usernameDisplay = result.anonymous 
        ? '<strong>–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</strong>'
        : `<strong>${result.username}</strong>`;
      
      resultItem.innerHTML = `
        <div class="medal">${medal}</div>
        <div class="answer-text">${usernameDisplay}: ${result.text}</div>
        <div class="vote-count">${result.votes} –≥–æ–ª–æ—Å(–æ–≤)</div>
      `;
      
      resultsList.appendChild(resultItem);
    });
    
    showScreen('resultsScreen');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ' + error.message, 'error');
    showScreen('gameScreen');
  }
}

// –ó–∞–ø—É—Å–∫ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
async function startVoting() {
  if (!currentGame || !currentGame.id || !currentGame.isCreator) {
    showNotification('–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', 'warning');
    return;
  }
  
  try {
    const response = await fetch(`${API_URL}/games/${currentGame.id}/startVoting`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        userId: currentUser.id
      })
    });
    
    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
    }
    
    const data = await response.json();
    
    showNotification('–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!', 'success');
    currentGame.status = 'voting';
      loadVotingOptions();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:', error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
  }
}

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
let statusCheckInterval = null;

function startStatusCheck() {
  if (statusCheckInterval) {
    clearInterval(statusCheckInterval);
  }
  
  statusCheckInterval = setInterval(() => {
    if (currentGame && currentGame.id) {
      checkGameStatus();
    }
  }, 5000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã
async function checkGameStatus() {
  if (!currentGame || !currentGame.id) {
    console.error('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∏–≥—Ä—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞');
    return;
  }
  
  try {
    const response = await fetch(`${API_URL}/games/${currentGame.id}?_=${Date.now()}`);
    
    if (!response.ok) {
      console.warn(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã: ${response.status} ${response.statusText}`);
      return;
    }
    
    const gameData = await response.json();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
    currentGame.status = gameData.status;
    
    console.log(`–°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã ${currentGame.id}: ${gameData.status}`);
    
    // –†–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    if (gameData.status === 'voting' && document.getElementById('answerScreen').style.display === 'block') {
      showNotification('–ù–∞—á–∞–ª–æ—Å—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –ª—É—á—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤.', 'info');
      loadVotingOptions();
    } else if (gameData.status === 'results' && document.getElementById('votingScreen').style.display === 'block') {
      showNotification('–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º.', 'success');
      loadResults();
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã:', error);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç–µ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    if (!navigator.onLine) {
      showNotification('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.', 'error');
    }
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
  console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
  
  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏
  const newNameBtn = document.getElementById('newNameBtn');
  if (newNameBtn) {
    newNameBtn.addEventListener('click', showNewNameForm);
  }
  
  const existingNameBtn = document.getElementById('existingNameBtn');
  if (existingNameBtn) {
    existingNameBtn.addEventListener('click', showExistingNames);
  }
  
  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ù–∞–∑–∞–¥"
  const backButtons = [
    { id: 'backToNameChoiceBtn', action: showNameChoiceOptions },
    { id: 'backToNameChoiceFromExistingBtn', action: showNameChoiceOptions },
    { id: 'backToStartBtn', action: () => showScreen('startScreen') },
    { id: 'backToMainFromQuestionBtn', action: () => showScreen('gameScreen') },
    { id: 'backToMainFromAnswerBtn', action: () => showScreen('gameScreen') },
    { id: 'backToMainFromVotingBtn', action: () => showScreen('gameScreen') },
    { id: 'backToMainBtn', action: () => showScreen('gameScreen') }
  ];
  
  backButtons.forEach(button => {
    const element = document.getElementById(button.id);
    if (element) {
      element.addEventListener('click', button.action);
    }
  });
  
  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
  const submitNameBtn = document.getElementById('submitNameBtn');
  if (submitNameBtn) {
    submitNameBtn.addEventListener('click', saveName);
  }
  
  const createGameBtn = document.getElementById('createGameBtn');
  if (createGameBtn) {
    createGameBtn.addEventListener('click', createNewGame);
  }
  
  const refreshGamesBtn = document.getElementById('refreshGamesBtn');
  if (refreshGamesBtn) {
    refreshGamesBtn.addEventListener('click', loadGames);
  }
  
  const submitQuestionBtn = document.getElementById('submitQuestionBtn');
  if (submitQuestionBtn) {
    submitQuestionBtn.addEventListener('click', saveQuestion);
  }
  
  const submitAnswerBtn = document.getElementById('submitAnswerBtn');
  if (submitAnswerBtn) {
    submitAnswerBtn.addEventListener('click', submitAnswer);
  }
  
  const submitVotesBtn = document.getElementById('submitVotesBtn');
  if (submitVotesBtn) {
    submitVotesBtn.addEventListener('click', submitVotes);
  }

  // –ï—Å–ª–∏ –º—ã –≤–Ω—É—Ç—Ä–∏ Telegram WebApp, –≥–æ—Ç–æ–≤–∏–º –µ–≥–æ
if (window.Telegram && window.Telegram.WebApp) {
    window.Telegram.WebApp.ready();
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    window.Telegram.WebApp.BackButton.onClick(goBack);
}
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(event) {
  console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error || event.message);
});