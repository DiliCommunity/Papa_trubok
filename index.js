const { Telegraf, Scenes, session } = require('telegraf');
const dotenv = require('dotenv');
const fs = require('fs');
const { Markup } = require('telegraf');
const gameManager = require('./gameManager');
const userManager = require('./userManager');
const nameScene = require('./scenes/nameScene');
const answerScene = require('./scenes/answerScene');
const customQuestionScene = require('./scenes/customQuestionScene');

dotenv.config();

const bot = new Telegraf(process.env.BOT_TOKEN);

// –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
fs.writeFileSync('games.json', '{}', 'utf8');
fs.writeFileSync('users.json', '{}', 'utf8');

gameManager.loadGames();
userManager.loadUsers();
const games = gameManager.getGames();

// –í–ê–ñ–ù–û: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –∏ —Å—Ü–µ–Ω –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –î–û –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
// –°–æ–∑–¥–∞–µ–º stage —Å–æ –≤—Å–µ–º–∏ —Å—Ü–µ–Ω–∞–º–∏ –∑–∞—Ä–∞–Ω–µ–µ

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º stage –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Å—Ü–µ–Ω—ã
const stage = new Scenes.Stage([nameScene, answerScene, customQuestionScene]);

// –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º middleware –î–û —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
bot.use(session());
bot.use(stage.middleware());

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const MAX_ANSWERS = 10; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –º–µ–Ω—é Telegram
bot.telegram.setMyCommands([
  { command: 'start', description: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞' },
  { command: 'newgame', description: '–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É' },
  { command: 'help', description: '–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã' }
]);

// –î–æ–±–∞–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
function createStyledMessage(title, content, emoji = 'üìù') {
  return `<b>üî∏üîπüî∏ ${emoji} ${title} ${emoji} üî∏üîπüî∏</b>\n\n${content}`;
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã –≤ CSV-—Ñ–∞–π–ª
function saveGameStats(game) {
  const filename = `game_${Date.now()}.csv`;
  let csvContent = "–†–∞—É–Ω–¥,–í–æ–ø—Ä–æ—Å,–ò–≥—Ä–æ–∫,–û—Ç–≤–µ—Ç,–ì–æ–ª–æ—Å–æ–≤\n";
  
  game.rounds.forEach((round, roundIndex) => {
    round.results.forEach(result => {
      csvContent += `${roundIndex + 1},"${round.question}",${result.userId},"${result.answer}",${result.votes}\n`;
    });
  });
  
  fs.writeFileSync(filename, csvContent, 'utf8');
  return filename;
}

// –í –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏
async function clearChatHistory(bot) {
  try {
    console.log('–û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–µ—Å—Å–∏–π...');
    
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä—ã
    gameManager.clearAllGames();
    userManager.clearAllUsers();
    
    console.log('–î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã, –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞');
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
    return false;
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã start
bot.command('start', async (ctx) => {
  try {
    // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –º–æ–∂–Ω–æ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    // –≠—Ç–æ –Ω–µ –≤—Å–µ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π API Telegram
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await ctx.reply(
      createStyledMessage('–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨', '–Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ —Å–º–µ—à–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã PapaTrubok. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!', 'üé≠'),
      {
        parse_mode: 'HTML',
        ...Markup.inlineKeyboard([
          [Markup.button.callback('üöÄ –°—Ç–∞—Ä—Ç', 'start_game')]
        ])
      }
    );
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã start:', error);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –≤–≤–µ—Å—Ç–∏ /start');
  }
});

// –ü–æ–∫–∞–∑ –ø—Ä–∞–≤–∏–ª
bot.action('show_rules', (ctx) => {
  const rulesMessage = createStyledMessage('–ü–†–ê–í–ò–õ–ê –ò–ì–†–´', 
    `1Ô∏è‚É£ –ö–∞–∂–¥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –∑–∞–¥–∞—ë—Ç—Å—è –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –≤–æ–ø—Ä–æ—Å\n` +
    `2Ô∏è‚É£ –ö–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –±–æ—Ç—É –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–≤–æ–∏–º —Å–∞–º—ã–º —Å–º–µ—à–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º\n` +
    `3Ô∏è‚É£ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–∞—á–Ω—ë—Ç—Å—è –∫–æ–≥–¥–∞:\n` +
    `   ‚óæ –ù–∞–±–µ—Ä—ë—Ç—Å—è ${MAX_ANSWERS} –æ—Ç–≤–µ—Ç–æ–≤ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)\n` +
    `   ‚óæ –ò–õ–ò —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã –Ω–∞–∂–º—ë—Ç –∫–Ω–æ–ø–∫—É –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è\n` +
    `4Ô∏è‚É£ –í –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏ –∫–∞–∂–¥—ã–π –≤—ã–±–∏—Ä–∞–µ—Ç 2 —Å–∞–º—ã—Ö —Å–º–µ—à–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞ (–∫—Ä–æ–º–µ —Å–≤–æ–µ–≥–æ)\n` +
    `5Ô∏è‚É£ –ü–æ–±–µ–∂–¥–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≥–æ–ª–æ—Å–æ–≤\n`, 'üìú');
  
  ctx.editMessageText(rulesMessage, { 
    parse_mode: 'HTML',
    ...Markup.inlineKeyboard([
      [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'back_to_main')],
    ])
  });
});

// –í–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
bot.action('back_to_main', (ctx) => {
  ctx.editMessageText(
    createStyledMessage('–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨', '–Ø –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ —Å–º–µ—à–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã PapaTrubok. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!', 'üé≠'),
    {
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [Markup.button.callback('üöÄ –°—Ç–∞—Ä—Ç', 'start_game')]
      ])
    }
  );
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–º–µ–Ω–∏
bot.action('set_funny_name', (ctx) => {
  ctx.scene.enter('name_scene');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∏–≥—Ä–µ
bot.action('join_game', (ctx) => {
  const userId = ctx.from.id;
  const userGames = userManager.getUsers();
  const games = gameManager.getGames();
  
  if (!userGames[userId] || !userGames[userId].funnyName) {
    return ctx.answerCbQuery('–°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–¥—É–º–∞–π—Ç–µ —Å–µ–±–µ –ø—Ä–∏–∫–æ–ª—å–Ω–æ–µ –∏–º—è!', { show_alert: true });
  }
  
  // –í—ã–≤–æ–¥–∏–º –≤—Å–µ –∏–≥—Ä—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log('–í—Å–µ –∏–≥—Ä—ã –≤ —Å–∏—Å—Ç–µ–º–µ:', Object.keys(games).map(id => ({
    id,
    status: games[id].status,
    active: games[id].active,
    initiator: games[id].initiatorName,
    participants: games[id].participants?.length || 0
  })));
  
  // –ò—â–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã (—Å –º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π)
  const activeGames = Object.entries(games)
    .filter(([id, game]) => game.active && (game.status === 'waiting_players' || game.status === 'collecting_answers'))
    .map(([id, game]) => ({
      id,
      name: game.initiatorName,
      count: game.participants.length,
      hasQuestion: !!game.currentQuestion
    }));
  
  console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã:', activeGames); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
  
  if (activeGames.length === 0) {
    return ctx.answerCbQuery('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é!', { show_alert: true });
  }
  
  const roomButtons = activeGames.map(g =>
    [Markup.button.callback(`${g.hasQuestion ? '‚úÖ' : '‚è≥'} –ö–æ–º–Ω–∞—Ç–∞: ${g.name} (${g.count}/${MAX_ANSWERS})`, `join_room_${g.id}`)]
  );
  
  ctx.editMessageText(
    createStyledMessage('–í–´–ë–ï–†–ò–¢–ï –ö–û–ú–ù–ê–¢–£', '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', 'üèõÔ∏è'),
    {
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        ...roomButtons,
        [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'back_to_main')]
      ])
    }
  );
});

// –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∫–æ–º–Ω–∞—Ç–µ
bot.action(/join_room_(\d+)/, (ctx) => {
  const userId = ctx.from.id;
  const userGames = userManager.getUsers();
  const games = gameManager.getGames();
  const gameId = ctx.match[1];
  
  if (!games[gameId]) {
    return ctx.answerCbQuery('–≠—Ç–∞ –∏–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.', { show_alert: true });
  }
  
  if (!games[gameId].active) {
    return ctx.answerCbQuery('–≠—Ç–∞ –∏–≥—Ä–∞ —É–∂–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞.', { show_alert: true });
  }
  
  // –†–∞–∑—Ä–µ—à–∞–µ–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è, –¥–∞–∂–µ –µ—Å–ª–∏ –∏–≥—Ä–∞ –≤ —Ä–µ–∂–∏–º–µ —Å–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–æ–≤
  if (games[gameId].status !== 'waiting_players' && games[gameId].status !== 'collecting_answers') {
    return ctx.answerCbQuery('–≠—Ç–∞ –∫–æ–º–Ω–∞—Ç–∞ —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤—Ö–æ–¥–∞.', { show_alert: true });
  }
  
  const game = games[gameId];
  
  if (game.participants.includes(userId)) {
    return ctx.answerCbQuery('–í—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ —ç—Ç–æ–π –∏–≥—Ä–µ!', { show_alert: true });
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
  game.participants.push(userId);
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º participantData, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
  if (!game.participantData) game.participantData = {};
  
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –∏–≥—Ä–æ–∫–µ
  game.participantData[userId] = {
    username: userGames[userId].funnyName,
    joinTime: new Date().toISOString()
  };
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
  gameManager.setGame(gameId, game);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å, –µ—Å–ª–∏ –æ–Ω —É–∂–µ –µ—Å—Ç—å
  let joinMsg = `–û—Ç–ª–∏—á–Ω–æ, ${userGames[userId].funnyName}! –í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ.\n\n` +
    `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤: ${game.participants.length}/${MAX_ANSWERS}\n\n` +
    `–û–∂–∏–¥–∞–π—Ç–µ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞–±–µ—Ä–µ—Ç—Å—è ${MAX_ANSWERS} –∏–≥—Ä–æ–∫–æ–≤ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã —Ä–µ—à–∏—Ç –Ω–∞—á–∞—Ç—å.`;
  
  if (game.currentQuestion) {
    joinMsg += `\n\n<b>–í–æ–ø—Ä–æ—Å –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è:</b>\n"${game.currentQuestion}"`;
  }
  
  ctx.editMessageText(
    createStyledMessage('–í–´ –ü–†–ò–°–û–ï–î–ò–ù–ò–õ–ò–°–¨ –ö –ò–ì–†–ï', joinMsg, 'üéÆ'),
    {
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard(
        game.currentQuestion && game.status === 'collecting_answers'
          ? [[Markup.button.callback('‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å', `provide_answer_${gameId}`)]]
          : []
      )
    }
  );
  
  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
  ctx.telegram.sendMessage(
    game.initiator,
    createStyledMessage('–ù–û–í–´–ô –£–ß–ê–°–¢–ù–ò–ö',
      `${userGames[userId].funnyName} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!\n\n` +
      `<b>–ò–≥—Ä–æ–∫–æ–≤:</b> ${game.participants.length}/${MAX_ANSWERS}\n` +
      `<b>–û—Å—Ç–∞–ª–æ—Å—å:</b> ${MAX_ANSWERS - game.participants.length} –∏–≥—Ä–æ–∫–æ–≤`, 'üë•'),
    {
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [Markup.button.callback('‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å', `provide_answer_${gameId}`)],
        [Markup.button.callback('üöÄ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É —Å–µ–π—á–∞—Å', `start_game_now_${gameId}`)]
      ])
    }
  );
  
  // –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–≥—Ä–æ–∫–æ–≤, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É
  if (game.participants.length >= MAX_ANSWERS) {
    // –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ collecting_answers
    game.status = 'collecting_answers';
    gameManager.setGame(gameId, game);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
    game.participants.forEach(participantId => {
      if (participantId !== userId) { // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ
        ctx.telegram.sendMessage(
          participantId,
          createStyledMessage('–ò–ì–†–ê –ù–ê–ß–ê–õ–ê–°–¨', 
            `–ù–∞–±—Ä–∞–ª–æ—Å—å ${MAX_ANSWERS} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤! –ò–≥—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∞–ª–∞—Å—å.\n\n` +
            `<b>–í–æ–ø—Ä–æ—Å:</b> "${game.currentQuestion}"`, 'üöÄ'),
          { 
            parse_mode: 'HTML',
            ...Markup.inlineKeyboard([
              [Markup.button.callback('‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å', `provide_answer_${gameId}`)]
            ])
          }
        );
      }
    });
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è –∏–≥—Ä—ã
    ctx.telegram.sendMessage(
      game.initiator,
      createStyledMessage('–ò–ì–†–ê –ù–ê–ß–ê–õ–ê–°–¨',
        `–ù–∞–±—Ä–∞–ª–æ—Å—å ${MAX_ANSWERS} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤! –ò–≥—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∞–ª–∞—Å—å.\n\n` +
        `<b>–í–æ–ø—Ä–æ—Å:</b> "${game.currentQuestion}"`, 'üöÄ'),
      {
        parse_mode: 'HTML',
        ...Markup.inlineKeyboard([
          [Markup.button.callback('‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å', `provide_answer_${gameId}`)],
          [Markup.button.callback('üó≥Ô∏è –ù–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', `start_voting_${gameId}`)]
        ])
      }
    );
  }
  
  ctx.answerCbQuery('–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ!');
});

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∏–≥—Ä—ã —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É
bot.action('create_new_game', (ctx) => {
  const userId = ctx.from.id;
  const userGames = userManager.getUsers();
  const games = gameManager.getGames();
  
  if (!userGames[userId] || !userGames[userId].funnyName) {
    return ctx.answerCbQuery('–°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–¥—É–º–∞–π—Ç–µ —Å–µ–±–µ –ø—Ä–∏–∫–æ–ª—å–Ω–æ–µ –∏–º—è!', { show_alert: true });
  }
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É
  const gameId = Date.now().toString();
  const newGame = {
    active: true,
    initiator: userId,
    initiatorName: userGames[userId].funnyName,
    answers: {},
    votes: {},
    votingActive: false,
    totalScores: {},
    status: 'waiting_players', // –≤–∞–∂–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏–≥—Ä—ã
    rounds: [],
    participants: [userId],
    participantData: {
      [userId]: {
        username: userGames[userId].funnyName,
        joinTime: new Date().toISOString()
      }
    },
    createdAt: new Date().toISOString(),
    isCustomQuestion: true
  };
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–≥—Ä—É –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ —Å—Ü–µ–Ω—É
  gameManager.setGame(gameId, newGame);
  
  // –¢–µ–ø–µ—Ä—å –≤—Ö–æ–¥–∏–º –≤ —Å—Ü–µ–Ω—É —Å –≤–æ–ø—Ä–æ—Å–æ–º
  ctx.scene.enter('custom_question_scene', { gameId });
  ctx.answerCbQuery('–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
});

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –ø—É–Ω–∫—Ç–æ–º "–ó–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å"
bot.action(/select_questions_menu_(\d+)/, async (ctx) => {
  const userId = ctx.from.id;
  const gameId = ctx.match[1];
  
  if (!games[gameId] || games[gameId].initiator !== userId) {
    return ctx.answerCbQuery('–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º —ç—Ç–æ–π –∏–≥—Ä—ã.', { show_alert: true });
  }
  
  const game = games[gameId];
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—é –∏–≥—Ä—ã –∫—Ä–∞—Å–∏–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
  try {
    // –û–≥—Ä–∞–Ω–∏—á–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const questionButtons = questions.slice(0, 5).map((q, index) => {
      const shortQuestion = q.length > 40 ? q.substring(0, 37) + '...' : q;
      return [Markup.button.callback(`${index + 1}. ${shortQuestion}`, `select_question_${gameId}_${index}`)];
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å"
    questionButtons.push([Markup.button.callback('‚úçÔ∏è 6. –ó–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å', `custom_question_${gameId}`)]);
    
    ctx.editMessageText(
      createStyledMessage('–í–´–ë–û–† –í–û–ü–†–û–°–ê', 
        `–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –¥–ª—è —ç—Ç–æ–≥–æ —Ä–∞—É–Ω–¥–∞:\n\n` +
        `–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∏–≥—Ä–µ: ${game.participants.length}/${MAX_ANSWERS}`, '‚ùì'),
      { 
        parse_mode: 'HTML',
        ...Markup.inlineKeyboard([
          ...questionButtons,
          [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', `admin_menu_${gameId}`)]
        ])
      }
    );
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞:', error);
    ctx.answerCbQuery('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–æ–ø—Ä–æ—Å–æ–≤!', { show_alert: true });
  }
});

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞, —á—Ç–æ–±—ã –∏–≥—Ä–∞ –æ—Å—Ç–∞–≤–∞–ª–∞—Å—å –≤ —Å—Ç–∞—Ç—É—Å–µ waiting_players
bot.action(/custom_question_(\d+)/, (ctx) => {
  const userId = ctx.from.id;
  const gameId = ctx.match[1];
  const games = gameManager.getGames();
  
  if (!games[gameId] || games[gameId].initiator !== userId) {
    return ctx.answerCbQuery('–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º —ç—Ç–æ–π –∏–≥—Ä—ã.', { show_alert: true });
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º gameId –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å—Ü–µ–Ω—ã
  ctx.scene.state = { gameId: gameId };
  console.log(`–í—Ö–æ–¥–∏–º –≤ —Å—Ü–µ–Ω—É –≤–æ–ø—Ä–æ—Å–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:`, ctx.scene.state); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
  
  // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ "—á–∞—Å–æ–≤" –æ–∂–∏–¥–∞–Ω–∏—è
  ctx.answerCbQuery();
  
  // –í—Ö–æ–¥–∏–º –≤ —Å—Ü–µ–Ω—É –≤–≤–æ–¥–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
  ctx.scene.enter('custom_question_scene');
});

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å"
bot.action(/provide_answer_(\d+)/, async (ctx) => {
  const userId = ctx.from.id;
  const gameId = ctx.match[1];
  const games = gameManager.getGames();
  const game = games[gameId];

  console.log(`–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å": userId=${userId}, gameId=${gameId}`); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

  if (!game) {
    return ctx.answerCbQuery('–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.', { show_alert: true });
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∏–≥—Ä—ã
  if (!game.participants.includes(userId)) {
    return ctx.answerCbQuery('–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —ç—Ç–æ–π –∏–≥—Ä—ã.', { show_alert: true });
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –∏–≥—Ä—ã –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å
  if (!game.currentQuestion) {
    return ctx.answerCbQuery('–î–ª—è —ç—Ç–æ–π –∏–≥—Ä—ã –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–Ω –≤–æ–ø—Ä–æ—Å.', { show_alert: true });
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–≥—Ä–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã
  if (game.status !== 'collecting_answers' && game.status !== 'waiting_players') {
    return ctx.answerCbQuery('–≠—Ç–∞ –∏–≥—Ä–∞ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.', { show_alert: true });
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Ç–≤–µ—á–∞–ª —Ä–∞–Ω–µ–µ
  if (game.answers && game.answers[userId]) {
    return ctx.answerCbQuery('–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å.', { show_alert: true });
  }
  
  // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ "—á–∞—Å–æ–≤" –æ–∂–∏–¥–∞–Ω–∏—è
  await ctx.answerCbQuery();

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!ctx.session) ctx.session = {};
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º gameId –∏ –≤ —Å–µ—Å—Å–∏–∏ –∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å—Ü–µ–Ω—ã –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
  ctx.session.gameId = gameId;
  ctx.scene.state = { gameId: gameId };
  
  console.log(`–ü–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ —Å—Ü–µ–Ω—É: state=${JSON.stringify(ctx.scene.state)}, session=${JSON.stringify(ctx.session)}`); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

  // –í—Ö–æ–¥–∏–º –≤ —Å—Ü–µ–Ω—É –æ—Ç–≤–µ—Ç–∞
  return ctx.scene.enter('answer_scene');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
bot.action(/select_question_(\d+)_(\d+)/, (ctx) => {
  const userId = ctx.from.id;
  const gameId = ctx.match[1];
  const questionIndex = parseInt(ctx.match[2], 10);

  if (!games[gameId] || games[gameId].initiator !== userId) {
    return ctx.answerCbQuery('–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º —ç—Ç–æ–π –∏–≥—Ä—ã.', { show_alert: true });
  }

  const game = games[gameId];
  game.currentQuestionIndex = questionIndex;
  game.currentQuestion = questions[questionIndex];
  game.question = questions[questionIndex];
  game.isCustomQuestion = false;

  ctx.editMessageText(
    createStyledMessage('–í–û–ü–†–û–° –í–´–ë–†–ê–ù', 
      `–í–æ–ø—Ä–æ—Å –¥–ª—è —Ä–∞—É–Ω–¥–∞:\n\n"${game.currentQuestion}"\n\n` +
      `–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${game.participants.length}/${MAX_ANSWERS}\n` +
      `–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É —Å–µ–π—á–∞—Å –∏–ª–∏ –ø–æ–¥–æ–∂–¥–∞—Ç—å –µ—â—ë –∏–≥—Ä–æ–∫–æ–≤.`, '‚úÖ'),
    { 
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [Markup.button.callback('üöÄ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É —Å–µ–π—á–∞—Å', `start_game_now_${gameId}`)],
        [Markup.button.callback('‚è≥ –ñ–¥–∞—Ç—å –µ—â—ë —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', `wait_more_players_${gameId}`)]
      ])
    }
  );
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
function startGame(gameId) {
  const games = gameManager.getGames();
  const game = games[gameId];
  
  if (!game || game.status !== 'waiting_players') {
    return false;
  }
  
  if (game.participants.length < 2) {
    // –°–æ–æ–±—â–∞–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—é, —á—Ç–æ –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 –∏–≥—Ä–æ–∫–∞
    bot.telegram.sendMessage(
      game.initiator,
      '–î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 —É—á–∞—Å—Ç–Ω–∏–∫–∞!',
      {
        ...Markup.inlineKeyboard([
          [Markup.button.callback('üöÄ –°—Ç–∞—Ä—Ç', 'start_game')]
        ])
      }
    );
    return false;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–ø—Ä–æ—Å –≤—ã–±—Ä–∞–Ω
  if (!game.currentQuestion) {
    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –µ—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω
    const randomIndex = Math.floor(Math.random() * questions.length);
    game.currentQuestionIndex = randomIndex;
    game.currentQuestion = questions[randomIndex];
    game.question = questions[randomIndex];
  }
  
  game.status = 'collecting_answers';
  game.answers = {};
  game.votes = {};
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
  game.participants.forEach(userId => {
    bot.telegram.sendMessage(
      userId,
      createStyledMessage('–ò–ì–†–ê –ù–ê–ß–ê–õ–ê–°–¨', 
        `<b>–í–æ–ø—Ä–æ—Å —Ä–∞—É–Ω–¥–∞:</b>\n\n` +
        `"${game.currentQuestion}"\n\n` +
        `–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à —Å–∞–º—ã–π —Å–º–µ—à–Ω–æ–π –æ—Ç–≤–µ—Ç, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:`, 'üéÆ'),
      { 
        parse_mode: 'HTML',
        ...Markup.inlineKeyboard([
          [Markup.button.callback('‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å', `provide_answer_${gameId}`)]
        ])
      }
    );
  });
  
  return true;
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç
function getGameStatusText(status) {
  switch(status) {
    case 'waiting_players': return '–û–∂–∏–¥–∞–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤';
    case 'collecting_answers': return '–°–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤';
    case 'voting': return '–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ';
    default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å';
  }
}

// –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ"
bot.action(/start_voting_(\d+)/, (ctx) => {
  const userId = ctx.from.id;
  const gameId = ctx.match[1];
  const games = gameManager.getGames();
  const game = games[gameId];

  if (!game) {
    return ctx.answerCbQuery('–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.', { show_alert: true });
  }

  if (game.initiator !== userId) {
    return ctx.answerCbQuery('–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ.', { show_alert: true });
  }

  const answersCount = Object.keys(game.answers || {}).length;
  
  if (answersCount < 2) {
    return ctx.answerCbQuery('–ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 –æ—Ç–≤–µ—Ç–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ!', { show_alert: true });
  }

  // –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
  game.status = 'voting';
  game.votes = {};
  gameManager.setGame(gameId, game);

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è (–±–µ–∑ —Å–≤–æ–µ–≥–æ)
  game.participants.forEach(participantId => {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Ç–≤–µ—Ç—ã, –∫—Ä–æ–º–µ –æ—Ç–≤–µ—Ç–∞ —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
    const answers = Object.entries(game.answers || {})
      .filter(([uid]) => uid !== participantId.toString())
      .map(([uid, ans]) => ({
        uid,
        text: ans.text,
        username: ans.username
      }));

    if (answers.length === 0) return; // –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è

    // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å 2)
    const voteButtons = answers.map(ans =>
      [Markup.button.callback(`${ans.username}: ${ans.text}`, `vote_${gameId}_${ans.uid}`)]
    );

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    ctx.telegram.sendMessage(
      participantId,
      createStyledMessage('–ì–û–õ–û–°–û–í–ê–ù–ò–ï –ù–ê–ß–ê–õ–û–°–¨', 
        `<b>–í–æ–ø—Ä–æ—Å:</b> "${game.currentQuestion}"\n\n` +
        `–í—ã–±–µ—Ä–∏—Ç–µ 2 —Å–∞–º—ã—Ö —Å–º–µ—à–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞ (–∫—Ä–æ–º–µ —Å–≤–æ–µ–≥–æ). –í–∞—à –æ—Ç–≤–µ—Ç –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ.`, 'üó≥Ô∏è'),
      {
        parse_mode: 'HTML',
        ...Markup.inlineKeyboard(voteButtons)
      }
    );
  });

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—é, —á—Ç–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å
  ctx.editMessageText(
    createStyledMessage('–ì–û–õ–û–°–û–í–ê–ù–ò–ï –ó–ê–ü–£–©–ï–ù–û', 
      `–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!\n\n` +
      `<b>–í–æ–ø—Ä–æ—Å:</b> "${game.currentQuestion}"\n\n` +
      `<b>–û—Ç–≤–µ—Ç–æ–≤:</b> ${answersCount}\n` +
      `<b>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b> ${game.participants.length}\n\n` +
      `–û–∂–∏–¥–∞–π—Ç–µ, –ø–æ–∫–∞ –≤—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø—Ä–æ–≥–æ–ª–æ—Å—É—é—Ç. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ–±—ä—è–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.`, 'üó≥Ô∏è'),
    { 
      parse_mode: 'HTML' 
    }
  );

  ctx.answerCbQuery('–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!');
});

// –£–ª—É—á—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≥–æ–ª–æ—Å–æ–≤
bot.action(/vote_(\d+)_(\d+)/, (ctx) => {
  const userId = ctx.from.id;
  const gameId = ctx.match[1];
  const votedForId = ctx.match[2];
  const games = gameManager.getGames();
  const game = games[gameId];

  if (!game) {
    return ctx.answerCbQuery('–≠—Ç–∞ –∏–≥—Ä–∞ –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.', { show_alert: true });
  }

  if (game.status !== 'voting') {
    return ctx.answerCbQuery('–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ.', { show_alert: true });
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≥–æ–ª–æ—Å—É–µ—Ç –∑–∞ —Å–≤–æ–π –æ—Ç–≤–µ—Ç
  if (votedForId === userId.toString()) {
    return ctx.answerCbQuery('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ —Å–≤–æ–π –æ—Ç–≤–µ—Ç!', { show_alert: true });
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –≥–æ–ª–æ—Å–æ–≤, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
  if (!game.votes) game.votes = {};
  if (!game.votes[userId]) game.votes[userId] = [];

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª –∑–∞ —ç—Ç–æ—Ç –æ—Ç–≤–µ—Ç
  if (game.votes[userId].includes(votedForId)) {
    return ctx.answerCbQuery('–í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ —ç—Ç–æ—Ç –æ—Ç–≤–µ—Ç.', { show_alert: true });
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤ 2 –≥–æ–ª–æ—Å–∞
  if (game.votes[userId].length >= 2) {
    return ctx.answerCbQuery('–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –º–∞–∫—Å–∏–º—É–º 2 –æ—Ç–≤–µ—Ç–∞.', { show_alert: true });
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å
  game.votes[userId].push(votedForId);
  gameManager.setGame(gameId, game);

  // –°–æ–æ–±—â–∞–µ–º, —á—Ç–æ –≥–æ–ª–æ—Å –∑–∞—Å—á–∏—Ç–∞–Ω
  const votesGiven = game.votes[userId].length;
  const votesLeft = 2 - votesGiven;
  const msg = votesLeft > 0 
    ? `–ì–æ–ª–æ—Å –∑–∞—Å—á–∏—Ç–∞–Ω! –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ ${votesLeft} –æ—Ç–≤–µ—Ç(–∞).` 
    : '–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤—ã–±–æ—Ä.';
  
  ctx.answerCbQuery(msg);

  // –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–ª–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (votesGiven === 2) {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏
    ctx.editMessageText(
      createStyledMessage('–ì–û–õ–û–°–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û', 
        `–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–∏ –≥–æ–ª–æ—Å–∞! –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.`, '‚úÖ'),
      { parse_mode: 'HTML' }
    );
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –≥–æ–ª–æ—Å–µ
    ctx.telegram.sendMessage(
      game.initiator,
      createStyledMessage('–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ì–û–õ–û–°–û–í–ê–ù–ò–ò', 
        `–£—á–∞—Å—Ç–Ω–∏–∫ ${userManager.getUsers()[userId]?.funnyName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'} –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª.\n\n` +
        `–ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${Object.keys(game.votes).length}/${game.participants.length}`, 'üìä'),
      { parse_mode: 'HTML' }
    );
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏
  const participants = game.participants.filter(uid => 
    game.answers && Object.keys(game.answers).includes(uid.toString()));
  
  const allVoted = participants.every(uid => 
    game.votes[uid] && game.votes[uid].length === 2);
  
  if (allVoted && participants.length >= 2) {
    // –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏, –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    finishVoting(gameId);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ä—Ç"
bot.action('start_game', (ctx) => {
  ctx.reply(
    createStyledMessage('–ù–ê–ß–ù–ò–¢–ï –ò–ì–†–£', '–ü—Ä–∏–¥—É–º–∞–π—Ç–µ —Å–µ–±–µ –ø—Ä–∏–∫–æ–ª—å–Ω–æ–µ –∏–º—è –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ!', 'üé≤'),
    {
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [Markup.button.callback('‚ú® –ü—Ä–∏–¥—É–º–∞—Ç—å –ø—Ä–∏–∫–æ–ª—å–Ω–æ–µ –∏–º—è', 'set_funny_name')],
        [Markup.button.callback('üéÆ –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É', 'create_new_game')],
        [Markup.button.callback('üé≤ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ', 'join_game')]
      ])
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ñ–¥–∞—Ç—å –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
bot.action(/wait_for_answers_(\d+)/, (ctx) => {
  const userId = ctx.from.id;
  const gameId = ctx.match[1];
  const games = gameManager.getGames();
  
  if (!games[gameId] || games[gameId].initiator !== userId) {
    return ctx.answerCbQuery('–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º —ç—Ç–æ–π –∏–≥—Ä—ã.', { show_alert: true });
  }
  
  const game = games[gameId];
  
  // –°–æ–æ–±—â–∞–µ–º –∞–¥–º–∏–Ω—É, —á—Ç–æ –æ–Ω —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—à–µ–ª –≤ —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤
  ctx.editMessageText(
    createStyledMessage('–û–ñ–ò–î–ê–ù–ò–ï –£–ß–ê–°–¢–ù–ò–ö–û–í', 
      `–í–∞—à –≤–æ–ø—Ä–æ—Å: "${game.currentQuestion}"\n\n` +
      `–û–∂–∏–¥–∞–µ–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n` +
      `–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${game.participants.length}/${MAX_ANSWERS}\n\n` +
      `–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è.`, '‚è≥'),
    { 
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [Markup.button.callback('‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å', `provide_answer_${gameId}`)],
        [Markup.button.callback('üöÄ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É —Å–µ–π—á–∞—Å', `start_game_now_${gameId}`)]
      ])
    }
  );
  
  ctx.answerCbQuery('–†–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è –≤–∫–ª—é—á–µ–Ω');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É —Å–µ–π—á–∞—Å"
bot.action(/start_game_now_(\d+)/, (ctx) => {
  const userId = ctx.from.id;
  const gameId = ctx.match[1];
  const games = gameManager.getGames();
  
  if (!games[gameId] || games[gameId].initiator !== userId) {
    return ctx.answerCbQuery('–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º —ç—Ç–æ–π –∏–≥—Ä—ã.', { show_alert: true });
  }
  
  const game = games[gameId];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
  if (game.participants.length < 2) {
    return ctx.answerCbQuery('–î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 —É—á–∞—Å—Ç–Ω–∏–∫–∞!', { show_alert: true });
  }
  
  // –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã –Ω–∞ —Å–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤
  game.status = 'collecting_answers';
  gameManager.setGame(gameId, game);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
  game.participants.forEach(participantId => {
    if (!game.answers || !game.answers[participantId]) { // –ï—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –µ—â–µ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª
      bot.telegram.sendMessage(
        participantId,
        createStyledMessage('–ò–ì–†–ê –ù–ê–ß–ê–õ–ê–°–¨', 
          `<b>–í–æ–ø—Ä–æ—Å —Ä–∞—É–Ω–¥–∞:</b>\n\n` +
          `"${game.currentQuestion}"\n\n` +
          `–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à —Å–∞–º—ã–π —Å–º–µ—à–Ω–æ–π –æ—Ç–≤–µ—Ç, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:`, 'üéÆ'),
        { 
          parse_mode: 'HTML',
          ...Markup.inlineKeyboard([
            [Markup.button.callback('‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å', `provide_answer_${gameId}`)]
          ])
        }
      );
    }
  });
  
  ctx.editMessageText(
    createStyledMessage('–ò–ì–†–ê –ù–ê–ß–ê–õ–ê–°–¨', 
      `–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–æ–ø—Ä–æ—Å –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º.\n\n` +
      `–í–æ–ø—Ä–æ—Å: "${game.currentQuestion}"\n\n` +
      `–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${game.participants.length}`, 'üöÄ'),
    { 
      parse_mode: 'HTML',
      ...Markup.inlineKeyboard([
        [Markup.button.callback('‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å', `provide_answer_${gameId}`)],
        [Markup.button.callback('üó≥Ô∏è –ù–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', `start_voting_${gameId}`)]
      ])
    }
  );
  
  ctx.answerCbQuery('–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!');
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å –æ—á–∏—Å—Ç–∫–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
(async () => {
  try {
    // –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    await clearChatHistory(bot);
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥ –¥–ª—è Telegram
    await bot.telegram.setMyCommands([
      { command: 'start', description: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞' },
      { command: 'newgame', description: '–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É' },
      { command: 'help', description: '–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã' }
    ]);
    
    if (process.env.NODE_ENV === 'production') {
      // –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
      const WEBHOOK_URL = process.env.WEBHOOK_URL || 'https://–∏–º—è-–≤–∞—à–µ–≥–æ-–ø—Ä–æ–µ–∫—Ç–∞.onrender.com/webhook';
      await bot.telegram.setWebhook(WEBHOOK_URL);
      console.log(`–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ webhook: ${WEBHOOK_URL}`);
    } else {
      // –õ–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º polling
      await bot.launch();
      console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ long polling');
    }
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:', err);
  }
})();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–≥—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ç–æ–≤—ã –∫ –∑–∞–ø—É—Å–∫—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
setInterval(() => {
  const games = gameManager.getGames();
  Object.keys(games).forEach(gameId => {
    const game = games[gameId];
    if (game.shouldStartVoting) {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
      game.shouldStartVoting = false;
      gameManager.setGame(gameId, game);
      // –ó–∞–ø—É—Å–∫–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
      startVoting(gameId);
    }
  });
}, 5000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥

// –£–ª—É—á—à–∞–µ–º –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
function finishVoting(gameId) {
  const games = gameManager.getGames();
  const game = games[gameId];
  
  if (!game || game.status !== 'voting') {
    return; // –ò–≥—Ä–∞ —É–∂–µ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
  }

  // –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã
  game.status = 'results';
  
  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –≥–æ–ª–æ—Å–∞
  const votes = {};
  Object.values(game.votes || {}).forEach(userVotes => {
    userVotes.forEach(votedFor => {
      votes[votedFor] = (votes[votedFor] || 0) + 1;
    });
  });
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã 
  const sortedResults = Object.entries(game.answers || {})
    .map(([userId, answer]) => ({
      userId,
      username: answer.username,
      text: answer.text,
      votes: votes[userId] || 0
    }))
    .sort((a, b) => b.votes - a.votes);
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
  let resultMessage = `<b>–í–æ–ø—Ä–æ—Å:</b> "${game.currentQuestion}"\n\n`;
  resultMessage += '<b>üèÜ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ì–û–õ–û–°–û–í–ê–ù–ò–Ø:</b>\n\n';
  
  sortedResults.forEach((result, index) => {
    let medal = "";
    if (index === 0) medal = "ü•á ";
    else if (index === 1) medal = "ü•à ";
    else if (index === 2) medal = "ü•â ";
    
    resultMessage += `${medal}<b>${result.username}</b>: "${result.text}" - <b>${result.votes}</b> –≥–æ–ª–æ—Å(–æ–≤)\n`;
  });
  
  resultMessage += '\n–°–ø–∞—Å–∏–±–æ –≤—Å–µ–º –∑–∞ —É—á–∞—Å—Ç–∏–µ! üëè';
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—É–Ω–¥–∞
  if (!game.rounds) game.rounds = [];
  game.rounds.push({
    question: game.currentQuestion,
    results: sortedResults,
    completedAt: new Date().toISOString()
  });
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π —Å—á–µ—Ç
  if (!game.totalScores) game.totalScores = {};
  sortedResults.forEach(result => {
    game.totalScores[result.userId] = (game.totalScores[result.userId] || 0) + result.votes;
  });
  
  // –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É
  game.active = false;
  gameManager.setGame(gameId, game);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
  game.participants.forEach(userId => {
    bot.telegram.sendMessage(
      userId,
      createStyledMessage('–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ì–û–õ–û–°–û–í–ê–ù–ò–Ø', resultMessage, 'üèÜ'),
      { 
        parse_mode: 'HTML',
        ...Markup.inlineKeyboard([
          [Markup.button.callback('üöÄ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', 'start_game')]
        ])
      }
    );
  });
}

// –î–æ–±–∞–≤—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.command('reset', async (ctx) => {
  const userId = ctx.from.id;
  
  // –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const users = userManager.getUsers();
  if (users[userId]) {
    delete users[userId];
    userManager.saveUsers();
  }
  
  // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≤—Å–µ—Ö –∏–≥—Ä
  const games = gameManager.getGames();
  Object.keys(games).forEach(gameId => {
    const game = games[gameId];
    if (game.participants && game.participants.includes(userId)) {
      game.participants = game.participants.filter(id => id !== userId);
      if (game.participantData && game.participantData[userId]) {
        delete game.participantData[userId];
      }
      if (game.answers && game.answers[userId]) {
        delete game.answers[userId];
      }
      if (game.votes && game.votes[userId]) {
        delete game.votes[userId];
      }
      gameManager.setGame(gameId, game);
    }
  });
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–±—Ä–æ—Å–µ
  await ctx.reply('–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º.');
});